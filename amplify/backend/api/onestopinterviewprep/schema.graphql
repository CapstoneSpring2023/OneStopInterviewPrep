type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  Reviews: [Review] @hasMany(indexName: "byUser", fields: ["id"])
  first_name: String
  last_name: String
  email: String!
  companyID: ID! @index(name: "byCompany")
  resume: String
}

type Review @model @auth(rules: [{allow: public}]) {
  id: ID!
  review: String!
  rating: Int!
  level: [Int!]!
  position: String!
  companyID: ID! @index(name: "byCompany")
  userID: ID @index(name: "byUser")
  questionID: ID @index(name: "byQuestions")
  urlID: ID @index(name: "byURL")
}

type Questions @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String!
  type: Int!
  concepts: [String]
  prompt: String!
  solution: String!
  Companies: [Company!] @manyToMany(relationName: "CompanyQuestions")
  Reviews: [Review] @hasMany(indexName: "byQuestions", fields: ["id"])
}

type URL @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String!
  source: Int
  url: AWSURL!
  Companies: [Company!] @manyToMany(relationName: "URLCompany")
  Reviews: [Review] @hasMany(indexName: "byURL", fields: ["id"])
}

type Company @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  logo: String
  urls: [URL] @manyToMany(relationName: "URLCompany")
  questions: [Questions] @manyToMany(relationName: "CompanyQuestions")
  Reviews: [Review] @hasMany(indexName: "byCompany", fields: ["id"])
  Users: [User] @hasMany(indexName: "byCompany", fields: ["id"])
}
 