{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\github\\\\Proj3\\\\aggie-fangs\\\\src\\\\components\\\\FeedbackView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport loadingGif from \"../images/loading.gif\";\nimport upimg1 from \"../images/up1.png\";\nimport upimg2 from \"../images/up2.png\";\nimport downimg1 from \"../images/down1.png\";\nimport downimg2 from \"../images/down2.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedbackView(_ref) {\n  _s();\n\n  let {\n    company\n  } = _ref;\n  const [reviewInfo, setReviewInfo] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:3002/getReviews', {\n      method: \"GET\"\n    }).then(response => {\n      if (response.type === 'opaque' || response.ok) {\n        response.json().then(revItems => {\n          setReviewInfo(revItems);\n        });\n      }\n    }).catch(error => {\n      console.log(\"Error is: \", error);\n    });\n  }, []);\n\n  function upVote(id) {// do something with the id of the review\n  }\n\n  function downVote(id) {// do something with the id of the review\n  }\n\n  if (reviewInfo == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loadingGif,\n        alt: \"wait until the page loads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  } else {\n    console.log(\"reviewInfo: \", reviewInfo);\n    var rev1 = reviewInfo[5];\n    var revTitle = rev1.title;\n    var revDesc = rev1.description;\n    console.log(\"*First elem:\", rev1);\n    console.log(\"attributes\", revTitle);\n    var reviewList = new Array();\n\n    var upImage = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: upimg2,\n      alt: \"upvote\",\n      align: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }, this); // if statement to change which up image to use based on whether the user has voted\n\n\n    var downImage = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: downimg2,\n      alt: \"upvote\",\n      align: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this); // if statement to change which down image to use\n\n\n    var thisCompany = localStorage.getItem(\"this-company\");\n    reviewInfo.map(singleReviewItem => reviewList.push(true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reviewBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Name: \", singleReviewItem.name, \" / \", singleReviewItem.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tags: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: singleReviewItem.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"votes up\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: upVote,\n          children: upImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), singleReviewItem.upVotes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"votes down\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: downVote,\n          children: downImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), singleReviewItem.downVots]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reviewBox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: reviewList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(FeedbackView, \"eYgLFdUA8BzAEChhgEcr7g83nlI=\");\n\n_c = FeedbackView;\nexport default FeedbackView;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackView\");","map":{"version":3,"sources":["C:/Programming/github/Proj3/aggie-fangs/src/components/FeedbackView.js"],"names":["React","useEffect","useState","loadingGif","upimg1","upimg2","downimg1","downimg2","FeedbackView","company","reviewInfo","setReviewInfo","fetch","method","then","response","type","ok","json","revItems","catch","error","console","log","upVote","id","downVote","rev1","revTitle","title","revDesc","description","reviewList","Array","upImage","downImage","thisCompany","localStorage","getItem","map","singleReviewItem","push","name","upVotes","downVots"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport loadingGif from \"../images/loading.gif\";\r\nimport upimg1 from \"../images/up1.png\";\r\nimport upimg2 from \"../images/up2.png\";\r\nimport downimg1 from \"../images/down1.png\";\r\nimport downimg2 from \"../images/down2.png\";\r\n\r\nfunction FeedbackView({company}){\r\n    const [reviewInfo, setReviewInfo] = useState(null);\r\n    useEffect(() => {\r\n        fetch('http://localhost:3002/getReviews',{\r\n        method: \"GET\"\r\n      }).then(response => {\r\n       if (response.type === 'opaque' || response.ok) {\r\n           response.json().then(revItems => {\r\n           setReviewInfo(revItems)\r\n         });\r\n       } \r\n     }).catch(error => {\r\n       console.log(\"Error is: \", error)\r\n     });\r\n    },[]);\r\n    function upVote (id) {\r\n        // do something with the id of the review\r\n    }\r\n    function downVote (id) {\r\n        // do something with the id of the review\r\n    }\r\n\r\n    \r\n    if(reviewInfo == null){\r\n        return(\r\n            <div>\r\n                <img src={loadingGif} alt=\"wait until the page loads\"/>\r\n            </div>\r\n        )\r\n    } else {\r\n        console.log(\"reviewInfo: \", reviewInfo)\r\n        var rev1 = reviewInfo[5]\r\n        var revTitle = rev1.title\r\n        var revDesc = rev1.description\r\n        console.log(\"*First elem:\", rev1)\r\n        console.log(\"attributes\", revTitle)\r\n\r\n        var reviewList = new Array();\r\n\r\n        var upImage = <img src={upimg2} alt=\"upvote\" align=\"left\"/>\r\n        // if statement to change which up image to use based on whether the user has voted\r\n        var downImage = <img src={downimg2} alt=\"upvote\" align=\"right\"/>\r\n        // if statement to change which down image to use\r\n        var thisCompany = localStorage.getItem(\"this-company\");\r\n\r\n\r\n        reviewInfo.map( singleReviewItem => (\r\n            reviewList.push((true) ? (<div className=\"reviewBox\">\r\n                <h3>Name: {singleReviewItem.name} / {singleReviewItem.title}</h3>\r\n                <h3>Tags: </h3>\r\n                <body>\r\n                    {singleReviewItem.description}\r\n                </body>\r\n                <div class=\"votes up\">\r\n                    <a onClick={upVote}>{upImage}</a>{singleReviewItem.upVotes}\r\n                </div>\r\n                <div class=\"votes down\">\r\n                    <a onClick={downVote}>{downImage}</a>{singleReviewItem.downVots}\r\n                </div>\r\n            </div>) : (<div className=\"reviewBox\"></div>))\r\n        ));\r\n\r\n        return(\r\n            <div>\r\n                {reviewList}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default FeedbackView;"]},"metadata":{},"sourceType":"module"}