{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\github\\\\Proj3\\\\aggie-fangs\\\\src\\\\pages\\\\codingProb.js\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodingProblemList = () => {\n  /*const [codeProbArr, setcodeProbArr] = useState(null);\r\n  useEffect(() => {\r\n    fetch('http://localhost:3002/tags',{\r\n    method: \"GET\"\r\n  }).then(response => {\r\n    if (response.type === 'opaque' || response.ok) {\r\n        response.json().then(codeProbsObjs => {\r\n          setcodeProbArr(codeProbsObjs)\r\n      });\r\n    } \r\n  }).catch(error => {\r\n    console.log(\"Error is: \", error)\r\n  });\r\n  },[]);\r\n  \r\n  if(codeProbArr != null){\r\n    codeProbArr.map(codeObj => {\r\n      console.log(\"a single coding problem\")\r\n    })\r\n  }*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CodingProblemList;\nexport default CodingProblem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodingProblemList\");","map":{"version":3,"sources":["C:/Programming/github/Proj3/aggie-fangs/src/pages/codingProb.js"],"names":["React","useEffect","useState","CodingProblemList","CodingProblem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BD;;KAAMA,iB;AA6BN,eAAeC,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst CodingProblemList = () => {\r\n  /*const [codeProbArr, setcodeProbArr] = useState(null);\r\n  useEffect(() => {\r\n    fetch('http://localhost:3002/tags',{\r\n    method: \"GET\"\r\n  }).then(response => {\r\n    if (response.type === 'opaque' || response.ok) {\r\n        response.json().then(codeProbsObjs => {\r\n          setcodeProbArr(codeProbsObjs)\r\n      });\r\n    } \r\n  }).catch(error => {\r\n    console.log(\"Error is: \", error)\r\n  });\r\n  },[]);\r\n\r\n\r\n  if(codeProbArr != null){\r\n    codeProbArr.map(codeObj => {\r\n      console.log(\"a single coding problem\")\r\n    })\r\n  }*/\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CodingProblem"]},"metadata":{},"sourceType":"module"}