{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logLevelSeverity = exports.makeConsoleLogger = exports.LogLevel = void 0;\n\nconst helpers_1 = require(\"./helpers\");\n\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"debug\";\n  LogLevel[\"INFO\"] = \"info\";\n  LogLevel[\"WARN\"] = \"warn\";\n  LogLevel[\"ERROR\"] = \"error\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n\nfunction makeConsoleLogger(name) {\n  return (level, message, extraInfo) => {\n    console[level](`${name} ${level}:`, message, extraInfo);\n  };\n}\n\nexports.makeConsoleLogger = makeConsoleLogger;\n/**\n * Transforms a log level into a comparable (numerical) value ordered by severity.\n */\n\nfunction logLevelSeverity(level) {\n  switch (level) {\n    case LogLevel.DEBUG:\n      return 20;\n\n    case LogLevel.INFO:\n      return 40;\n\n    case LogLevel.WARN:\n      return 60;\n\n    case LogLevel.ERROR:\n      return 80;\n\n    default:\n      return (0, helpers_1.assertNever)(level);\n  }\n}\n\nexports.logLevelSeverity = logLevelSeverity;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA,IAAYA,QAAZ;;AAAA,WAAYA,QAAZ,EAAoB;AAClBA;AACAA;AACAA;AACAA;AACD,CALD,EAAYA,QAAQ,GAARC,wCAAQ,EAAR,CAAZ;;AAWA,SAAgBC,iBAAhB,CAAkCC,IAAlC,EAA8C;AAC5C,SAAO,CAACC,KAAD,EAAQC,OAAR,EAAiBC,SAAjB,KAA8B;AACnCC,WAAO,CAACH,KAAD,CAAP,CAAe,GAAGD,IAAI,IAAIC,KAAK,GAA/B,EAAoCC,OAApC,EAA6CC,SAA7C;AACD,GAFD;AAGD;;AAJDL;AAMA;;;;AAGA,SAAgBO,gBAAhB,CAAiCJ,KAAjC,EAAgD;AAC9C,UAAQA,KAAR;AACE,SAAKJ,QAAQ,CAACS,KAAd;AACE,aAAO,EAAP;;AACF,SAAKT,QAAQ,CAACU,IAAd;AACE,aAAO,EAAP;;AACF,SAAKV,QAAQ,CAACW,IAAd;AACE,aAAO,EAAP;;AACF,SAAKX,QAAQ,CAACY,KAAd;AACE,aAAO,EAAP;;AACF;AACE,aAAO,2BAAYR,KAAZ,CAAP;AAVJ;AAYD;;AAbDH","names":["LogLevel","exports","makeConsoleLogger","name","level","message","extraInfo","console","logLevelSeverity","DEBUG","INFO","WARN","ERROR"],"sources":["C:\\Programming\\github\\Proj3\\aggie-fangs\\node_modules\\@notionhq\\client\\src\\logging.ts"],"sourcesContent":["import { assertNever } from \"./helpers\"\n\nexport enum LogLevel {\n  DEBUG = \"debug\",\n  INFO = \"info\",\n  WARN = \"warn\",\n  ERROR = \"error\",\n}\n\nexport interface Logger {\n  (level: LogLevel, message: string, extraInfo: Record<string, unknown>): void\n}\n\nexport function makeConsoleLogger(name: string): Logger {\n  return (level, message, extraInfo) => {\n    console[level](`${name} ${level}:`, message, extraInfo)\n  }\n}\n\n/**\n * Transforms a log level into a comparable (numerical) value ordered by severity.\n */\nexport function logLevelSeverity(level: LogLevel): number {\n  switch (level) {\n    case LogLevel.DEBUG:\n      return 20\n    case LogLevel.INFO:\n      return 40\n    case LogLevel.WARN:\n      return 60\n    case LogLevel.ERROR:\n      return 80\n    default:\n      return assertNever(level)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}