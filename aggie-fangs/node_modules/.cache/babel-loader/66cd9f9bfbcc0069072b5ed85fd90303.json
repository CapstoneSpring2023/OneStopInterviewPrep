{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\github\\\\Proj3\\\\aggie-fangs\\\\src\\\\pages\\\\codingProb.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProbButton = styled.button`\n  cursor: pointer;\n  background-color: rgb(75, 0, 130);\n  width: 100%;\n  padding: 15px 0px;\n  color: white;\n  text-align: center;\n  font-size: 20px;\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\n  align-self: left;\n  left: 0;\n  margin-top: 10px;\n  margin-bottom: 0;\n`;\n_c = ProbButton;\n\nfunction CodingProblemList() {\n  _s();\n\n  const [codeProbArr, setcodeProbArr] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:3002/getCodeProb', {\n      method: \"GET\"\n    }).then(response => {\n      if (response.type === 'opaque' || response.ok) {\n        response.json().then(codeProbsObjs => {\n          setcodeProbArr(codeProbsObjs);\n        });\n      }\n    }).catch(error => {\n      console.log(\"Error is: \", error);\n    });\n  }, []);\n\n  function changeCurrentProblem(objID) {\n    var probTitle = \"String Reversal\";\n    var probConcepts = objID;\n    var probPrompt = objID;\n    var probCompany = localStorage.getItem(\"this-company\");\n    localStorage.setItem(\"problem-title\", probTitle);\n    localStorage.setItem(\"problem-concepts\", probConcepts);\n    localStorage.setItem(\"problem-prompt\", probPrompt);\n    localStorage.setItem(\"problem-company\", probCompany);\n    window.location.reload;\n  }\n\n  var problemList = new Array();\n  var thisCompany = localStorage.getItem(\"this-company\"); // id, title, prompt, concepts, company\n\n  if (codeProbArr != null) {\n    codeProbArr.map(codeObj => {\n      problemList.push(!thisCompany.localeCompare(codeObj.company) || thisCompany == \"None\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ProbButton, {\n          onClick: () => {\n            changeCurrentProblem(codeObj.id);\n          },\n          children: codeObj.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 8\n      }, this) : null);\n    });\n  } else {\n    problemList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No problems here :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 22\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-problems\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Problems:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), problemList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CodingProblemList, \"s6ToEh3SIS7YH3lNHeMLhYsfqAI=\");\n\n_c2 = CodingProblemList;\nexport default CodingProblemList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProbButton\");\n$RefreshReg$(_c2, \"CodingProblemList\");","map":{"version":3,"sources":["C:/Programming/github/Proj3/aggie-fangs/src/pages/codingProb.js"],"names":["React","useEffect","useState","styled","ProbButton","button","CodingProblemList","codeProbArr","setcodeProbArr","fetch","method","then","response","type","ok","json","codeProbsObjs","catch","error","console","log","changeCurrentProblem","objID","probTitle","probConcepts","probPrompt","probCompany","localStorage","getItem","setItem","window","location","reload","problemList","Array","thisCompany","map","codeObj","push","localeCompare","company","id","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAACE,MAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;KAAMD,U;;AAeN,SAASE,iBAAT,GAA8B;AAAA;;AAC5B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,IAAD,CAA9C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,mCAAD,EAAqC;AAC1CC,MAAAA,MAAM,EAAE;AADkC,KAArC,CAAL,CAECC,IAFD,CAEMC,QAAQ,IAAI;AAClB,UAAIA,QAAQ,CAACC,IAAT,KAAkB,QAAlB,IAA8BD,QAAQ,CAACE,EAA3C,EAA+C;AAC3CF,QAAAA,QAAQ,CAACG,IAAT,GAAgBJ,IAAhB,CAAqBK,aAAa,IAAI;AACpCR,UAAAA,cAAc,CAACQ,aAAD,CAAd;AACH,SAFC;AAGH;AACF,KARC,EAQCC,KARD,CAQOC,KAAK,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACD,KAVC;AAWD,GAZQ,EAYP,EAZO,CAAT;;AAcA,WAASG,oBAAT,CAA+BC,KAA/B,EAAsC;AACpC,QAAIC,SAAS,GAAG,iBAAhB;AACA,QAAIC,YAAY,GAAGF,KAAnB;AACA,QAAIG,UAAU,GAAGH,KAAjB;AACA,QAAII,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAlB;AACAD,IAAAA,YAAY,CAACE,OAAb,CAAqB,eAArB,EAAsCN,SAAtC;AACAI,IAAAA,YAAY,CAACE,OAAb,CAAqB,kBAArB,EAAyCL,YAAzC;AACAG,IAAAA,YAAY,CAACE,OAAb,CAAqB,gBAArB,EAAuCJ,UAAvC;AACAE,IAAAA,YAAY,CAACE,OAAb,CAAqB,iBAArB,EAAwCH,WAAxC;AACAI,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;AAED,MAAIC,WAAW,GAAG,IAAIC,KAAJ,EAAlB;AACA,MAAIC,WAAW,GAAGR,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAlB,CA7B4B,CA8B5B;;AACA,MAAGrB,WAAW,IAAI,IAAlB,EAAuB;AACrBA,IAAAA,WAAW,CAAC6B,GAAZ,CAAgBC,OAAO,IAAI;AACzBJ,MAAAA,WAAW,CAACK,IAAZ,CAAkB,CAACH,WAAW,CAACI,aAAZ,CAA0BF,OAAO,CAACG,OAAlC,CAAD,IAA+CL,WAAW,IAAI,MAA/D,gBAChB;AAAA,+BACC,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAM;AAACd,YAAAA,oBAAoB,CAACgB,OAAO,CAACI,EAAT,CAApB;AAAiC,WAA7D;AAAA,oBAAgEJ,OAAO,CAACK;AAAxE;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADgB,GAIf,IAJF;AAKD,KAND;AAOD,GARD,MAQO;AACLT,IAAAA,WAAW,CAACK,IAAZ,eAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGL,WAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAhDQ3B,iB;;MAAAA,iB;AAkDT,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nconst ProbButton = styled.button `\r\n  cursor: pointer;\r\n  background-color: rgb(75, 0, 130);\r\n  width: 100%;\r\n  padding: 15px 0px;\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\r\n  align-self: left;\r\n  left: 0;\r\n  margin-top: 10px;\r\n  margin-bottom: 0;\r\n`\r\n\r\nfunction CodingProblemList () {\r\n  const [codeProbArr, setcodeProbArr] = useState(null);\r\n  useEffect(() => {\r\n    fetch('http://localhost:3002/getCodeProb',{\r\n    method: \"GET\"\r\n  }).then(response => {\r\n    if (response.type === 'opaque' || response.ok) {\r\n        response.json().then(codeProbsObjs => {\r\n          setcodeProbArr(codeProbsObjs)\r\n      });\r\n    } \r\n  }).catch(error => {\r\n    console.log(\"Error is: \", error)\r\n  });\r\n  },[]);\r\n\r\n  function changeCurrentProblem (objID) {\r\n    var probTitle = \"String Reversal\";\r\n    var probConcepts = objID;\r\n    var probPrompt = objID;\r\n    var probCompany = localStorage.getItem(\"this-company\");\r\n    localStorage.setItem(\"problem-title\", probTitle);\r\n    localStorage.setItem(\"problem-concepts\", probConcepts);\r\n    localStorage.setItem(\"problem-prompt\", probPrompt);\r\n    localStorage.setItem(\"problem-company\", probCompany);\r\n    window.location.reload;\r\n  }\r\n\r\n  var problemList = new Array();\r\n  var thisCompany = localStorage.getItem(\"this-company\");\r\n  // id, title, prompt, concepts, company\r\n  if(codeProbArr != null){\r\n    codeProbArr.map(codeObj => {\r\n      problemList.push((!thisCompany.localeCompare(codeObj.company) || thisCompany == \"None\") ?\r\n      (<div>\r\n        <ProbButton onClick={() => {changeCurrentProblem(codeObj.id)}}>{codeObj.title}</ProbButton>\r\n      </div>)\r\n      : null)\r\n    })\r\n  } else {\r\n    problemList.push(<div>No problems here :(</div>)\r\n  }\r\n  return (\r\n    <div className='show-problems'>\r\n      <h1>Problems:</h1>\r\n      {problemList}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CodingProblemList"]},"metadata":{},"sourceType":"module"}