{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\github\\\\Proj3\\\\aggie-fangs\\\\src\\\\pages\\\\codingProb.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodingProblem = () => {\n  _s();\n\n  const [codeProbArr, setcodeProbArr] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:3002/tags', {\n      method: \"GET\"\n    }).then(response => {\n      if (response.type === 'opaque' || response.ok) {\n        response.json().then(codeProbsObjs => {\n          setcodeProbArr(codeProbsObjs);\n        });\n      }\n    }).catch(error => {\n      console.log(\"Error is: \", error);\n    });\n  }, []);\n\n  if (codeProbArr != null) {\n    codeProbArr.map(codeObj => {\n      console.log(\"a single coding problem\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CodingProblem, \"s6ToEh3SIS7YH3lNHeMLhYsfqAI=\");\n\n_c = CodingProblem;\nexport default CodingProblem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodingProblem\");","map":{"version":3,"sources":["C:/Programming/github/Proj3/aggie-fangs/src/pages/codingProb.js"],"names":["React","useEffect","useState","CodingProblem","codeProbArr","setcodeProbArr","fetch","method","then","response","type","ok","json","codeProbsObjs","catch","error","console","log","map","codeObj"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,IAAD,CAA9C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAAC,4BAAD,EAA8B;AACnCC,MAAAA,MAAM,EAAE;AAD2B,KAA9B,CAAL,CAECC,IAFD,CAEMC,QAAQ,IAAI;AAClB,UAAIA,QAAQ,CAACC,IAAT,KAAkB,QAAlB,IAA8BD,QAAQ,CAACE,EAA3C,EAA+C;AAC3CF,QAAAA,QAAQ,CAACG,IAAT,GAAgBJ,IAAhB,CAAqBK,aAAa,IAAI;AACpCR,UAAAA,cAAc,CAACQ,aAAD,CAAd;AACH,SAFC;AAGH;AACF,KARC,EAQCC,KARD,CAQOC,KAAK,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACD,KAVC;AAWD,GAZQ,EAYP,EAZO,CAAT;;AAeA,MAAGX,WAAW,IAAI,IAAlB,EAAuB;AACrBA,IAAAA,WAAW,CAACc,GAAZ,CAAgBC,OAAO,IAAI;AACzBH,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,KAFD;AAGD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BD;;GAAMd,a;;KAAAA,a;AA6BN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst CodingProblem = () => {\r\n  const [codeProbArr, setcodeProbArr] = useState(null);\r\n  useEffect(() => {\r\n    fetch('http://localhost:3002/tags',{\r\n    method: \"GET\"\r\n  }).then(response => {\r\n    if (response.type === 'opaque' || response.ok) {\r\n        response.json().then(codeProbsObjs => {\r\n          setcodeProbArr(codeProbsObjs)\r\n      });\r\n    } \r\n  }).catch(error => {\r\n    console.log(\"Error is: \", error)\r\n  });\r\n  },[]);\r\n\r\n\r\n  if(codeProbArr != null){\r\n    codeProbArr.map(codeObj => {\r\n      console.log(\"a single coding problem\")\r\n    })\r\n  }\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CodingProblem"]},"metadata":{},"sourceType":"module"}