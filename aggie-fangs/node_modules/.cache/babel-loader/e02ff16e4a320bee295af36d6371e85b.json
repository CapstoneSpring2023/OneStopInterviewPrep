{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\github\\\\Proj3\\\\aggie-fangs\\\\src\\\\components\\\\FeedbackView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport loadingGif from \"../images/loading.gif\";\nimport upimg1 from \"../images/up1.png\";\nimport upimg2 from \"../images/up2.png\";\nimport downimg1 from \"../images/down1.png\";\nimport downimg2 from \"../images/down2.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar dbAddress = localStorage.getItem(\"db-address\");\nvar reviewAddress = dbAddress.concat(dbAddress, \"/getReviews\");\nreviewAddress = \"http://localhost:3002/getReviews\";\n\nfunction FeedbackView(_ref) {\n  _s();\n\n  let {\n    company\n  } = _ref;\n  const [reviewInfo, setReviewInfo] = useState(null);\n  useEffect(() => {\n    fetch(reviewAddress, {\n      method: \"GET\"\n    }).then(response => {\n      if (response.type === 'opaque' || response.ok) {\n        response.json().then(revItems => {\n          setReviewInfo(revItems);\n        });\n      }\n    }).catch(error => {\n      console.log(\"Error is: \", error);\n    });\n  }, []);\n\n  function upVote(id) {\n    // console.log(\"upvote id: \", id)\n    fetch(dbAddress + '/upVote/' + id, {\n      method: \"GET\"\n    }).then(response => {\n      if (response.type === 'opaque' || response.ok) {\n        window.location.href = window.location.href;\n      }\n    }).catch(error => {\n      console.log(\"Error is: \", error);\n    });\n  }\n\n  function downVote(id) {\n    // do something with the id of the review\n    //console.log(\"*downvote id: \", id)\n    fetch(dbAddress + '/downVote/' + id, {\n      method: \"GET\"\n    }).then(response => {\n      if (response.type === 'opaque' || response.ok) {\n        window.location.href = window.location.href;\n      }\n    }).catch(error => {\n      console.log(\"Error is: \", error);\n    });\n  }\n\n  if (reviewInfo == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loadingGif,\n        alt: \"wait until the page loads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  } else {\n    var reviewList = new Array();\n\n    var upImage = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: upimg2,\n      alt: \"upvote\",\n      align: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }, this); // if statement to change which up image to use based on whether the user has voted\n\n\n    var downImage = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: downimg2,\n      alt: \"upvote\",\n      align: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }, this); // if statement to change which down image to use\n\n\n    var thisCompany = localStorage.getItem(\"this-company\");\n    /*the down vote and up votes dont display properly on some company pages */\n\n    reviewInfo.map(singleReviewItem => {\n      reviewList.push(!thisCompany.localeCompare(singleReviewItem.title) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reviewBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Name: \", singleReviewItem.name, \" / \", singleReviewItem.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tags: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n          children: singleReviewItem.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"votes up\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: () => {\n              upVote(singleReviewItem.id);\n            },\n            children: upImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), singleReviewItem.upVotes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"votes down\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: () => {\n              downVote(singleReviewItem.id);\n            },\n            children: downImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), singleReviewItem.downVotes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 18\n      }, this) : null);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: reviewList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(FeedbackView, \"eYgLFdUA8BzAEChhgEcr7g83nlI=\");\n\n_c = FeedbackView;\nexport default FeedbackView;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackView\");","map":{"version":3,"sources":["C:/Programming/github/Proj3/aggie-fangs/src/components/FeedbackView.js"],"names":["React","useEffect","useState","loadingGif","upimg1","upimg2","downimg1","downimg2","dbAddress","localStorage","getItem","reviewAddress","concat","FeedbackView","company","reviewInfo","setReviewInfo","fetch","method","then","response","type","ok","json","revItems","catch","error","console","log","upVote","id","window","location","href","downVote","reviewList","Array","upImage","downImage","thisCompany","map","singleReviewItem","push","localeCompare","title","name","description","upVotes","downVotes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport loadingGif from \"../images/loading.gif\";\r\nimport upimg1 from \"../images/up1.png\";\r\nimport upimg2 from \"../images/up2.png\";\r\nimport downimg1 from \"../images/down1.png\";\r\nimport downimg2 from \"../images/down2.png\";\r\n\r\nvar dbAddress = localStorage.getItem(\"db-address\");\r\nvar reviewAddress = dbAddress.concat(dbAddress, \"/getReviews\");\r\nreviewAddress = \"http://localhost:3002/getReviews\";\r\n\r\nfunction FeedbackView({company}){\r\n    const [reviewInfo, setReviewInfo] = useState(null);\r\n    useEffect(() => {\r\n        fetch(reviewAddress,{\r\n        method: \"GET\"\r\n      }).then(response => {\r\n       if (response.type === 'opaque' || response.ok) {\r\n           response.json().then(revItems => {\r\n           setReviewInfo(revItems)\r\n         });\r\n       } \r\n     }).catch(error => {\r\n       console.log(\"Error is: \", error)\r\n     });\r\n    },[]);\r\n\r\n    function upVote(id) {\r\n       // console.log(\"upvote id: \", id)\r\n            fetch(dbAddress + '/upVote/' + id,{\r\n            method: \"GET\"\r\n        }).then(response => {\r\n            if (response.type === 'opaque' || response.ok) {\r\n                window.location.href = window.location.href;\r\n            } \r\n        }).catch(error => {\r\n        console.log(\"Error is: \", error)\r\n        });\r\n        \r\n    }\r\n\r\n    function downVote(id) {\r\n        // do something with the id of the review\r\n        //console.log(\"*downvote id: \", id)\r\n        fetch(dbAddress + '/downVote/' + id,{\r\n        method: \"GET\" \r\n        }).then(response => {\r\n            if (response.type === 'opaque' || response.ok) {\r\n                window.location.href = window.location.href;\r\n            } \r\n        }).catch(error => {\r\n            console.log(\"Error is: \", error)\r\n        });\r\n       \r\n    }\r\n\r\n\r\n    if(reviewInfo == null ){\r\n        return(\r\n            <div>\r\n                <img src={loadingGif} alt=\"wait until the page loads\"/>\r\n            </div>\r\n        )\r\n    } else {\r\n        var reviewList = new Array();\r\n        var upImage = <img src={upimg2} alt=\"upvote\" align=\"left\"/>\r\n        // if statement to change which up image to use based on whether the user has voted\r\n        var downImage = <img src={downimg2} alt=\"upvote\" align=\"right\"/>\r\n        // if statement to change which down image to use\r\n        var thisCompany = localStorage.getItem(\"this-company\");\r\n        /*the down vote and up votes dont display properly on some company pages */\r\n        reviewInfo.map( singleReviewItem => {\r\n            reviewList.push(\r\n                (!thisCompany.localeCompare(singleReviewItem.title)) ? \r\n                (<div className=\"reviewBox\">\r\n                    <h3>Name: {singleReviewItem.name} / {singleReviewItem.title}</h3>\r\n                    <h3>Tags: </h3>\r\n                    <body>\r\n                        {singleReviewItem.description}\r\n                    </body>\r\n                    <div class=\"votes up\">\r\n                        <a onClick={() => { upVote(singleReviewItem.id)}}>{upImage}</a>{singleReviewItem.upVotes}\r\n                    </div>\r\n                    <div class=\"votes down\">\r\n                        <a onClick={() => {downVote(singleReviewItem.id)}}>{downImage}</a>{singleReviewItem.downVotes}\r\n                    </div>\r\n                </div>)\r\n                : null\r\n            )\r\n        });\r\n        \r\n        return(\r\n            <div>\r\n                {reviewList}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default FeedbackView;"]},"metadata":{},"sourceType":"module"}