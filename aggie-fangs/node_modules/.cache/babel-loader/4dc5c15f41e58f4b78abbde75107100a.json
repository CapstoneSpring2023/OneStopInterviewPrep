{"ast":null,"code":"import { slicedToArray as _slicedToArray, objectWithoutProperties as _objectWithoutProperties } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport state from 'state-local';\nimport config$1 from '../config/index.js';\nimport validators from '../validators/index.js';\nimport compose from '../utils/compose.js';\nimport merge from '../utils/deepMerge.js';\nimport makeCancelable from '../utils/makeCancelable.js';\n/** the local state of the module */\n\nvar _state$create = state.create({\n  config: config$1,\n  isInitialized: false,\n  resolve: null,\n  reject: null,\n  monaco: null\n}),\n    _state$create2 = _slicedToArray(_state$create, 2),\n    getState = _state$create2[0],\n    setState = _state$create2[1];\n/**\n * set the loader configuration\n * @param {Object} config - the configuration object\n */\n\n\nfunction config(globalConfig) {\n  var _validators$config = validators.config(globalConfig),\n      monaco = _validators$config.monaco,\n      config = _objectWithoutProperties(_validators$config, [\"monaco\"]);\n\n  setState(function (state) {\n    return {\n      config: merge(state.config, config),\n      monaco: monaco\n    };\n  });\n}\n/**\n * handles the initialization of the monaco-editor\n * @return {Promise} - returns an instance of monaco (with a cancelable promise)\n */\n\n\nfunction init() {\n  var state = getState(function (_ref) {\n    var monaco = _ref.monaco,\n        isInitialized = _ref.isInitialized;\n    return {\n      monaco: monaco,\n      isInitialized: isInitialized\n    };\n  });\n\n  if (!state.isInitialized) {\n    setState({\n      isInitialized: true\n    });\n\n    if (state.monaco) {\n      return makeCancelable(Promise.resolve(state.monaco));\n    }\n\n    if (window.monaco && window.monaco.editor) {\n      storeMonacoInstance(window.monaco);\n      return makeCancelable(Promise.resolve(window.monaco));\n    }\n\n    compose(injectScripts, getMonacoLoaderScript)(configureLoader);\n  }\n\n  return makeCancelable(wrapperPromise);\n}\n/**\n * injects provided scripts into the document.body\n * @param {Object} script - an HTML script element\n * @return {Object} - the injected HTML script element\n */\n\n\nfunction injectScripts(script) {\n  return document.body.appendChild(script);\n}\n/**\n * creates an HTML script element with/without provided src\n * @param {string} [src] - the source path of the script\n * @return {Object} - the created HTML script element\n */\n\n\nfunction createScript(src) {\n  var script = document.createElement('script');\n  return src && (script.src = src), script;\n}\n/**\n * creates an HTML script element with the monaco loader src\n * @return {Object} - the created HTML script element\n */\n\n\nfunction getMonacoLoaderScript(configureLoader) {\n  var state = getState(function (_ref2) {\n    var config = _ref2.config,\n        reject = _ref2.reject;\n    return {\n      config: config,\n      reject: reject\n    };\n  });\n  var loaderScript = createScript(\"\".concat(state.config.paths.vs, \"/loader.js\"));\n\n  loaderScript.onload = function () {\n    return configureLoader();\n  };\n\n  loaderScript.onerror = state.reject;\n  return loaderScript;\n}\n/**\n * configures the monaco loader\n */\n\n\nfunction configureLoader() {\n  var state = getState(function (_ref3) {\n    var config = _ref3.config,\n        resolve = _ref3.resolve,\n        reject = _ref3.reject;\n    return {\n      config: config,\n      resolve: resolve,\n      reject: reject\n    };\n  });\n  var require = window.require;\n\n  require.config(state.config);\n\n  require(['vs/editor/editor.main'], function (monaco) {\n    storeMonacoInstance(monaco);\n    state.resolve(monaco);\n  }, function (error) {\n    state.reject(error);\n  });\n}\n/**\n * store monaco instance in local state\n */\n\n\nfunction storeMonacoInstance(monaco) {\n  if (!getState().monaco) {\n    setState({\n      monaco: monaco\n    });\n  }\n}\n/**\n * internal helper function\n * extracts stored monaco instance\n * @return {Object|null} - the monaco instance\n */\n\n\nfunction __getMonacoInstance() {\n  return getState(function (_ref4) {\n    var monaco = _ref4.monaco;\n    return monaco;\n  });\n}\n\nvar wrapperPromise = new Promise(function (resolve, reject) {\n  return setState({\n    resolve: resolve,\n    reject: reject\n  });\n});\nvar loader = {\n  config: config,\n  init: init,\n  __getMonacoInstance: __getMonacoInstance\n};\nexport default loader;","map":{"version":3,"sources":["C:/Programming/github/Proj3/aggie-fangs/node_modules/@monaco-editor/loader/lib/es/loader/index.js"],"names":["slicedToArray","_slicedToArray","objectWithoutProperties","_objectWithoutProperties","state","config$1","validators","compose","merge","makeCancelable","_state$create","create","config","isInitialized","resolve","reject","monaco","_state$create2","getState","setState","globalConfig","_validators$config","init","_ref","Promise","window","editor","storeMonacoInstance","injectScripts","getMonacoLoaderScript","configureLoader","wrapperPromise","script","document","body","appendChild","createScript","src","createElement","_ref2","loaderScript","concat","paths","vs","onload","onerror","_ref3","require","error","__getMonacoInstance","_ref4","loader"],"mappings":"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","sourcesContent":["import { slicedToArray as _slicedToArray, objectWithoutProperties as _objectWithoutProperties } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport state from 'state-local';\nimport config$1 from '../config/index.js';\nimport validators from '../validators/index.js';\nimport compose from '../utils/compose.js';\nimport merge from '../utils/deepMerge.js';\nimport makeCancelable from '../utils/makeCancelable.js';\n\n/** the local state of the module */\n\nvar _state$create = state.create({\n  config: config$1,\n  isInitialized: false,\n  resolve: null,\n  reject: null,\n  monaco: null\n}),\n    _state$create2 = _slicedToArray(_state$create, 2),\n    getState = _state$create2[0],\n    setState = _state$create2[1];\n/**\n * set the loader configuration\n * @param {Object} config - the configuration object\n */\n\n\nfunction config(globalConfig) {\n  var _validators$config = validators.config(globalConfig),\n      monaco = _validators$config.monaco,\n      config = _objectWithoutProperties(_validators$config, [\"monaco\"]);\n\n  setState(function (state) {\n    return {\n      config: merge(state.config, config),\n      monaco: monaco\n    };\n  });\n}\n/**\n * handles the initialization of the monaco-editor\n * @return {Promise} - returns an instance of monaco (with a cancelable promise)\n */\n\n\nfunction init() {\n  var state = getState(function (_ref) {\n    var monaco = _ref.monaco,\n        isInitialized = _ref.isInitialized;\n    return {\n      monaco: monaco,\n      isInitialized: isInitialized\n    };\n  });\n\n  if (!state.isInitialized) {\n    setState({\n      isInitialized: true\n    });\n\n    if (state.monaco) {\n      return makeCancelable(Promise.resolve(state.monaco));\n    }\n\n    if (window.monaco && window.monaco.editor) {\n      storeMonacoInstance(window.monaco);\n      return makeCancelable(Promise.resolve(window.monaco));\n    }\n\n    compose(injectScripts, getMonacoLoaderScript)(configureLoader);\n  }\n\n  return makeCancelable(wrapperPromise);\n}\n/**\n * injects provided scripts into the document.body\n * @param {Object} script - an HTML script element\n * @return {Object} - the injected HTML script element\n */\n\n\nfunction injectScripts(script) {\n  return document.body.appendChild(script);\n}\n/**\n * creates an HTML script element with/without provided src\n * @param {string} [src] - the source path of the script\n * @return {Object} - the created HTML script element\n */\n\n\nfunction createScript(src) {\n  var script = document.createElement('script');\n  return src && (script.src = src), script;\n}\n/**\n * creates an HTML script element with the monaco loader src\n * @return {Object} - the created HTML script element\n */\n\n\nfunction getMonacoLoaderScript(configureLoader) {\n  var state = getState(function (_ref2) {\n    var config = _ref2.config,\n        reject = _ref2.reject;\n    return {\n      config: config,\n      reject: reject\n    };\n  });\n  var loaderScript = createScript(\"\".concat(state.config.paths.vs, \"/loader.js\"));\n\n  loaderScript.onload = function () {\n    return configureLoader();\n  };\n\n  loaderScript.onerror = state.reject;\n  return loaderScript;\n}\n/**\n * configures the monaco loader\n */\n\n\nfunction configureLoader() {\n  var state = getState(function (_ref3) {\n    var config = _ref3.config,\n        resolve = _ref3.resolve,\n        reject = _ref3.reject;\n    return {\n      config: config,\n      resolve: resolve,\n      reject: reject\n    };\n  });\n  var require = window.require;\n\n  require.config(state.config);\n\n  require(['vs/editor/editor.main'], function (monaco) {\n    storeMonacoInstance(monaco);\n    state.resolve(monaco);\n  }, function (error) {\n    state.reject(error);\n  });\n}\n/**\n * store monaco instance in local state\n */\n\n\nfunction storeMonacoInstance(monaco) {\n  if (!getState().monaco) {\n    setState({\n      monaco: monaco\n    });\n  }\n}\n/**\n * internal helper function\n * extracts stored monaco instance\n * @return {Object|null} - the monaco instance\n */\n\n\nfunction __getMonacoInstance() {\n  return getState(function (_ref4) {\n    var monaco = _ref4.monaco;\n    return monaco;\n  });\n}\n\nvar wrapperPromise = new Promise(function (resolve, reject) {\n  return setState({\n    resolve: resolve,\n    reject: reject\n  });\n});\nvar loader = {\n  config: config,\n  init: init,\n  __getMonacoInstance: __getMonacoInstance\n};\n\nexport default loader;\n"]},"metadata":{},"sourceType":"module"}