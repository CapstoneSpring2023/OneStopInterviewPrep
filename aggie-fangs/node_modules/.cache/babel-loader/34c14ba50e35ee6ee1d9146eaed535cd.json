{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\github\\\\Proj3\\\\aggie-fangs\\\\src\\\\pages\\\\coding.js\";\nimport React, { Component } from 'react';\nimport logo from \"./../images/Aggie_Fangs_Logo_Transparent.png\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RunButton = styled.button`\n  cursor: pointer;\n  background-color: rgb(75, 0, 130);\n  width: 100px;\n  height: 50px;\n  padding: 5px 15px;\n  border-radius: 8px;\n  color: white;\n  text-align: center;\n  font-size: 13px;\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\n  align-self: left;\n  left: 0;\n`;\n\nvar probName = /*#__PURE__*/_jsxDEV(\"text\", {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 16\n}, this);\n\nvar probConcepts = /*#__PURE__*/_jsxDEV(\"text\", {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 20\n}, this);\n\nvar probPrompt = /*#__PURE__*/_jsxDEV(\"text\", {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 18\n}, this);\n\nvar probInOut = /*#__PURE__*/_jsxDEV(\"text\", {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 17\n}, this);\n/*const radioForm = (\r\n    <form className='problem-sort'>\r\n        <div className='radio'>\r\n            <label>\r\n                <input\r\n                    type = \"radio\"\r\n                    value = \"None\"\r\n                    checked = {this.state.selectedOption === \"None\"}\r\n                    onChange = {handleChange}\r\n                />\r\n                None\r\n            </label>\r\n        </div>\r\n        <div className='radio'>\r\n            <label>\r\n                <input\r\n                    type = \"radio\"\r\n                    value = \"Google\"\r\n                    checked = {this.state.selectedOption === \"Google\"}\r\n                    onChange = {handleChange}\r\n                />\r\n                None\r\n            </label>\r\n        </div>\r\n        <div className='radio'>\r\n            <label>\r\n                <input\r\n                    type = \"radio\"\r\n                    value = \"Facebook\"\r\n                    checked = {this.state.selectedOption === \"Facebook\"}\r\n                    onChange = {handleChange}\r\n                />\r\n                None\r\n            </label>\r\n        </div>\r\n        <div className='radio'>\r\n            <label>\r\n                <input\r\n                    type = \"radio\"\r\n                    value = \"Amazon\"\r\n                    checked = {this.state.selectedOption === \"Amazon\"}\r\n                    onChange = {handleChange}\r\n                />\r\n                None\r\n            </label>\r\n        </div>\r\n        <div className='radio'>\r\n            <label>\r\n                <input\r\n                    type = \"radio\"\r\n                    value = \"Netflix\"\r\n                    checked = {this.state.selectedOption === \"Netflix\"}\r\n                    onChange = {handleChange}\r\n                />\r\n                None\r\n            </label>\r\n        </div>\r\n        <div className='radio'>\r\n            <label>\r\n                <input\r\n                    type = \"radio\"\r\n                    value = \"Apple\"\r\n                    checked = {this.state.selectedOption === \"Apple\"}\r\n                    onChange = {handleChange}\r\n                />\r\n                None\r\n            </label>\r\n        </div>\r\n        <div className='radio'>\r\n            <label>\r\n                <input\r\n                    type = \"radio\"\r\n                    value = \"Microsoft\"\r\n                    checked = {this.state.selectedOption === \"Microsoft\"}\r\n                    onChange = {handleChange}\r\n                />\r\n                None\r\n            </label>\r\n        </div>\r\n    </form>\r\n);*/\n\n\nclass Coding extends Component {}\n/*class Coding extends Component {\r\n    getProblem () {\r\n        // todo\r\n        // this function will find the current problem and change what the page will output accordingly\r\n        probName = <text>String Reversal</text>;\r\n        probConcepts = <text>Traversal of Lists or Strings, Basic Problem Solving</text>;\r\n        probPrompt = <text>Given a string, write a function that reverses the string such that the old first element is now the last element, the old second element is now the second to last element, etc.</text>;\r\n        probInOut = <text>In: apple<br/>Out: elppa<br/>In: howdy<br/>Out: ydwoh</text>;\r\n    }\r\n    handleChange(event) {\r\n        localStorage.setItem(\"this-company\", event.target.value);\r\n    }\r\n    constructor() {\r\n        super();\r\n        var thisCompany = localStorage.getItem(\"this-company\");\r\n        if (!thisCompany) {\r\n            thisCompany = \"None\";\r\n        }\r\n        /*this.state = {\r\n            name: \"react\",\r\n        };\r\n        //this.handleChange = this.handleChange.bind(this);\r\n        this.getProblem();\r\n    }\r\n    render () {\r\n    return (\r\n        <div>\r\n            <div class=\"coding coding-header\">\r\n                <div class=\"split coding-logo\">\r\n                    <img src={logo} alt=\"logo\" />\r\n                </div>\r\n                <div class=\"split coding-problem-name\">\r\n                    <h1>Problem Name: {probName}</h1>\r\n                    <h2>Concepts Covered: {probConcepts}</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"coding coding-main\">\r\n                <div class=\"split problem-list\">\r\n                    <h1>Problems:</h1>\r\n\r\n                    <ul>\r\n                        <li><a href=\"\" onClick={this.getProblem()}>String Reversal</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"split problem-statement\">\r\n                    <h2>Problem Prompt:</h2>\r\n                    <body>{probPrompt}</body>\r\n                    <h2>Sample Inputs and Outputs:</h2>\r\n                    <body>{probInOut}</body>\r\n                    <h2>Your Code:</h2>\r\n                    <div class=\"coding-problem-left\">\r\n                        <textarea class=\"code-window\" id=\"userCode\" name=\"userCode\"/>\r\n                        <RunButton class=\"run-button\">Run Code</RunButton>\r\n                    </div>\r\n                    <div class=\"coding-problem-right\">\r\n                        <textarea disabled class=\"compiler-window\" id=\"terminal\" name=\"terminal\">\r\n                            Terminal Output\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}*/\n\n\nexport default Coding;","map":{"version":3,"sources":["C:/Programming/github/Proj3/aggie-fangs/src/pages/coding.js"],"names":["React","Component","logo","styled","RunButton","button","probName","probConcepts","probPrompt","probInOut","Coding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,8CAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,MAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;;AAeA,IAAIC,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA,QAAf;;AACA,IAAIC,YAAY,gBAAG;AAAA;AAAA;AAAA;AAAA,QAAnB;;AACA,IAAIC,UAAU,gBAAG;AAAA;AAAA;AAAA;AAAA,QAAjB;;AACA,IAAIC,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA,QAAhB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,MAAN,SAAqBT,SAArB,CAA+B;AAI/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeS,MAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport logo from \"./../images/Aggie_Fangs_Logo_Transparent.png\";\r\nimport styled from \"styled-components\";\r\n\r\nconst RunButton = styled.button `\r\n  cursor: pointer;\r\n  background-color: rgb(75, 0, 130);\r\n  width: 100px;\r\n  height: 50px;\r\n  padding: 5px 15px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 13px;\r\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\r\n  align-self: left;\r\n  left: 0;\r\n`\r\n\r\nvar probName = <text></text>;\r\nvar probConcepts = <text></text>;\r\nvar probPrompt = <text></text>;\r\nvar probInOut = <text></text>;\r\n\r\n\r\n\r\n/*const radioForm = (\r\n    <form className='problem-sort'>\r\n        <div className='radio'>\r\n            <label>\r\n                <input\r\n                    type = \"radio\"\r\n                    value = \"None\"\r\n                    checked = {this.state.selectedOption === \"None\"}\r\n                    onChange = {handleChange}\r\n                />\r\n                None\r\n            </label>\r\n        </div>\r\n        <div className='radio'>\r\n            <label>\r\n                <input\r\n                    type = \"radio\"\r\n                    value = \"Google\"\r\n                    checked = {this.state.selectedOption === \"Google\"}\r\n                    onChange = {handleChange}\r\n                />\r\n                None\r\n            </label>\r\n        </div>\r\n        <div className='radio'>\r\n            <label>\r\n                <input\r\n                    type = \"radio\"\r\n                    value = \"Facebook\"\r\n                    checked = {this.state.selectedOption === \"Facebook\"}\r\n                    onChange = {handleChange}\r\n                />\r\n                None\r\n            </label>\r\n        </div>\r\n        <div className='radio'>\r\n            <label>\r\n                <input\r\n                    type = \"radio\"\r\n                    value = \"Amazon\"\r\n                    checked = {this.state.selectedOption === \"Amazon\"}\r\n                    onChange = {handleChange}\r\n                />\r\n                None\r\n            </label>\r\n        </div>\r\n        <div className='radio'>\r\n            <label>\r\n                <input\r\n                    type = \"radio\"\r\n                    value = \"Netflix\"\r\n                    checked = {this.state.selectedOption === \"Netflix\"}\r\n                    onChange = {handleChange}\r\n                />\r\n                None\r\n            </label>\r\n        </div>\r\n        <div className='radio'>\r\n            <label>\r\n                <input\r\n                    type = \"radio\"\r\n                    value = \"Apple\"\r\n                    checked = {this.state.selectedOption === \"Apple\"}\r\n                    onChange = {handleChange}\r\n                />\r\n                None\r\n            </label>\r\n        </div>\r\n        <div className='radio'>\r\n            <label>\r\n                <input\r\n                    type = \"radio\"\r\n                    value = \"Microsoft\"\r\n                    checked = {this.state.selectedOption === \"Microsoft\"}\r\n                    onChange = {handleChange}\r\n                />\r\n                None\r\n            </label>\r\n        </div>\r\n    </form>\r\n);*/\r\n\r\nclass Coding extends Component {\r\n    \r\n}\r\n\r\n/*class Coding extends Component {\r\n    getProblem () {\r\n        // todo\r\n        // this function will find the current problem and change what the page will output accordingly\r\n        probName = <text>String Reversal</text>;\r\n        probConcepts = <text>Traversal of Lists or Strings, Basic Problem Solving</text>;\r\n        probPrompt = <text>Given a string, write a function that reverses the string such that the old first element is now the last element, the old second element is now the second to last element, etc.</text>;\r\n        probInOut = <text>In: apple<br/>Out: elppa<br/>In: howdy<br/>Out: ydwoh</text>;\r\n    }\r\n    handleChange(event) {\r\n        localStorage.setItem(\"this-company\", event.target.value);\r\n    }\r\n    constructor() {\r\n        super();\r\n        var thisCompany = localStorage.getItem(\"this-company\");\r\n        if (!thisCompany) {\r\n            thisCompany = \"None\";\r\n        }\r\n        /*this.state = {\r\n            name: \"react\",\r\n        };\r\n        //this.handleChange = this.handleChange.bind(this);\r\n        this.getProblem();\r\n    }\r\n    render () {\r\n    return (\r\n        <div>\r\n            <div class=\"coding coding-header\">\r\n                <div class=\"split coding-logo\">\r\n                    <img src={logo} alt=\"logo\" />\r\n                </div>\r\n                <div class=\"split coding-problem-name\">\r\n                    <h1>Problem Name: {probName}</h1>\r\n                    <h2>Concepts Covered: {probConcepts}</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"coding coding-main\">\r\n                <div class=\"split problem-list\">\r\n                    <h1>Problems:</h1>\r\n\r\n                    <ul>\r\n                        <li><a href=\"\" onClick={this.getProblem()}>String Reversal</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"split problem-statement\">\r\n                    <h2>Problem Prompt:</h2>\r\n                    <body>{probPrompt}</body>\r\n                    <h2>Sample Inputs and Outputs:</h2>\r\n                    <body>{probInOut}</body>\r\n                    <h2>Your Code:</h2>\r\n                    <div class=\"coding-problem-left\">\r\n                        <textarea class=\"code-window\" id=\"userCode\" name=\"userCode\"/>\r\n                        <RunButton class=\"run-button\">Run Code</RunButton>\r\n                    </div>\r\n                    <div class=\"coding-problem-right\">\r\n                        <textarea disabled class=\"compiler-window\" id=\"terminal\" name=\"terminal\">\r\n                            Terminal Output\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}*/\r\n\r\nexport default Coding;"]},"metadata":{},"sourceType":"module"}