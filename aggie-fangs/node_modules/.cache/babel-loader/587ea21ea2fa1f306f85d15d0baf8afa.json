{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\github\\\\Proj3\\\\aggie-fangs\\\\src\\\\pages\\\\codingProb.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CodingProblemList() {\n  _s();\n\n  const [codeProbArr, getCodeProb] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:3002/getCodeProb', {\n      method: \"GET\"\n    }).then(response => {\n      if (response.type === 'opaque' || response.ok) {\n        response.json().then(codeProbsObjs => {\n          setcodeProbArr(codeProbsObjs);\n        });\n      }\n    }).catch(error => {\n      console.log(\"Error is: \", error);\n    });\n  }, []);\n  var problemList = new Array();\n  var thisCompany = localStorage.getItem(\"this-company\");\n\n  if (codeProbArr != null) {\n    codeProbArr.map(codeObj => {\n      /*problemList.push(!(thisCompany.localeCompare(codeObj.company) || thisCompany == \"None\") ?\r\n      (<div>\r\n        <h1>This is a coding problem.</h1>\r\n      </div>)\r\n      : null)**/\n      problemList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Howdy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this));\n    });\n  } else {\n    problemList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No problems here :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-problems\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Problems:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), problemList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CodingProblemList, \"v0cELkuODn7uWmIlKFcvt5Pc5sQ=\");\n\n_c = CodingProblemList;\nexport default CodingProblemList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodingProblemList\");","map":{"version":3,"sources":["C:/Programming/github/Proj3/aggie-fangs/src/pages/codingProb.js"],"names":["React","useEffect","useState","CodingProblemList","codeProbArr","getCodeProb","fetch","method","then","response","type","ok","json","codeProbsObjs","setcodeProbArr","catch","error","console","log","problemList","Array","thisCompany","localStorage","getItem","map","codeObj","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,iBAAT,GAA8B;AAAA;;AAC5B,QAAM,CAACC,WAAD,EAAcC,WAAd,IAA6BH,QAAQ,CAAC,IAAD,CAA3C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAAC,mCAAD,EAAqC;AAC1CC,MAAAA,MAAM,EAAE;AADkC,KAArC,CAAL,CAECC,IAFD,CAEMC,QAAQ,IAAI;AAClB,UAAIA,QAAQ,CAACC,IAAT,KAAkB,QAAlB,IAA8BD,QAAQ,CAACE,EAA3C,EAA+C;AAC3CF,QAAAA,QAAQ,CAACG,IAAT,GAAgBJ,IAAhB,CAAqBK,aAAa,IAAI;AACpCC,UAAAA,cAAc,CAACD,aAAD,CAAd;AACH,SAFC;AAGH;AACF,KARC,EAQCE,KARD,CAQOC,KAAK,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACD,KAVC;AAWD,GAZQ,EAYP,EAZO,CAAT;AAcA,MAAIG,WAAW,GAAG,IAAIC,KAAJ,EAAlB;AACA,MAAIC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAlB;;AACA,MAAGnB,WAAW,IAAI,IAAlB,EAAuB;AACrBA,IAAAA,WAAW,CAACoB,GAAZ,CAAgBC,OAAO,IAAI;AACzB;AACN;AACA;AACA;AACA;AACMN,MAAAA,WAAW,CAACO,IAAZ,eAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjB;AACD,KAPD;AAQD,GATD,MASO;AACLP,IAAAA,WAAW,CAACO,IAAZ,eAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGP,WAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GApCQhB,iB;;KAAAA,iB;AAsCT,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nfunction CodingProblemList () {\r\n  const [codeProbArr, getCodeProb] = useState(null);\r\n  useEffect(() => {\r\n    fetch('http://localhost:3002/getCodeProb',{\r\n    method: \"GET\"\r\n  }).then(response => {\r\n    if (response.type === 'opaque' || response.ok) {\r\n        response.json().then(codeProbsObjs => {\r\n          setcodeProbArr(codeProbsObjs)\r\n      });\r\n    } \r\n  }).catch(error => {\r\n    console.log(\"Error is: \", error)\r\n  });\r\n  },[]);\r\n\r\n  var problemList = new Array();\r\n  var thisCompany = localStorage.getItem(\"this-company\");\r\n  if(codeProbArr != null){\r\n    codeProbArr.map(codeObj => {\r\n      /*problemList.push(!(thisCompany.localeCompare(codeObj.company) || thisCompany == \"None\") ?\r\n      (<div>\r\n        <h1>This is a coding problem.</h1>\r\n      </div>)\r\n      : null)**/\r\n      problemList.push(<div>Howdy</div>)\r\n    })\r\n  } else {\r\n    problemList.push(<div>No problems here :(</div>)\r\n  }\r\n  return (\r\n    <div className='show-problems'>\r\n      <h1>Problems:</h1>\r\n      {problemList}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CodingProblemList"]},"metadata":{},"sourceType":"module"}