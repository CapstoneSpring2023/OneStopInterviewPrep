[{"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\index.js":"1","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\reportWebVitals.js":"2","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\App.js":"3","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\network.js":"4","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\applications.js":"5","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\interviewPrep.js":"6","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\index.js":"7","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\Navbar\\index.js":"8","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\Cards.js":"9","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\Navbar\\NavbarElements.js":"10","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\CardItems.js":"11","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\coding.js":"12","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\googlePrep.js":"13","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\facebookPrep.js":"14","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\AmazonPrep.js":"15","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\ApplePrep.js":"16","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\NetflixPrep.js":"17","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\microsoftPrep.js":"18","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\Notion.js":"19","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\ReviewList.js":"20","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\Form.js":"21","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\ReviewItem.js":"22","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\guide1.js":"23","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\guide2.js":"24","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\guide3.js":"25","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\feedbackform.js":"26","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\VideoPlayer\\VideoComp.js":"27","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\VideoPlayer\\Search.js":"28","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\VideoPlayer\\VideoPlayer.js":"29","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\VideoPlayer\\VideoList.js":"30","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\VideoPlayer\\Video.js":"31","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\settings.js":"32","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\FormLC.js":"33","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\FormCoding.js":"34","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\FeedbackView.js":"35","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\LeetCodeURL.js":"36","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\OtherURL.js":"37","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\HackerRankURL.js":"38","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\codingProb.js":"39"},{"size":571,"mtime":1649295992085,"results":"40","hashOfConfig":"41"},{"size":375,"mtime":1649081969364,"results":"42","hashOfConfig":"41"},{"size":4327,"mtime":1651507375885,"results":"43","hashOfConfig":"41"},{"size":143,"mtime":1649165178900,"results":"44","hashOfConfig":"41"},{"size":351,"mtime":1649165178898,"results":"45","hashOfConfig":"41"},{"size":259,"mtime":1651103557135,"results":"46","hashOfConfig":"41"},{"size":3684,"mtime":1651506236770,"results":"47","hashOfConfig":"41"},{"size":1188,"mtime":1651506494466,"results":"48","hashOfConfig":"41"},{"size":1371,"mtime":1651104589454,"results":"49","hashOfConfig":"41"},{"size":1774,"mtime":1651506547878,"results":"50","hashOfConfig":"41"},{"size":645,"mtime":1649165178895,"results":"51","hashOfConfig":"41"},{"size":9454,"mtime":1651504837807,"results":"52","hashOfConfig":"41"},{"size":2069,"mtime":1651261557155,"results":"53","hashOfConfig":"41"},{"size":2078,"mtime":1651261557155,"results":"54","hashOfConfig":"41"},{"size":2071,"mtime":1651261557153,"results":"55","hashOfConfig":"41"},{"size":2065,"mtime":1651261557154,"results":"56","hashOfConfig":"41"},{"size":2073,"mtime":1651261557155,"results":"57","hashOfConfig":"41"},{"size":2468,"mtime":1651261557155,"results":"58","hashOfConfig":"41"},{"size":1465,"mtime":1649295992076,"results":"59","hashOfConfig":"60"},{"size":510,"mtime":1649295992084,"results":"61","hashOfConfig":"41"},{"size":5139,"mtime":1651371679375,"results":"62","hashOfConfig":"41"},{"size":426,"mtime":1650498940093,"results":"63","hashOfConfig":"41"},{"size":10165,"mtime":1651071333078,"results":"64","hashOfConfig":"41"},{"size":6820,"mtime":1651071354091,"results":"65","hashOfConfig":"41"},{"size":2852,"mtime":1651071340747,"results":"66","hashOfConfig":"41"},{"size":889,"mtime":1651074044489,"results":"67","hashOfConfig":"41"},{"size":1602,"mtime":1651152928144,"results":"68","hashOfConfig":"41"},{"size":912,"mtime":1650466389809,"results":"69","hashOfConfig":"41"},{"size":676,"mtime":1651152882730,"results":"70","hashOfConfig":"41"},{"size":595,"mtime":1651152872020,"results":"71","hashOfConfig":"41"},{"size":974,"mtime":1650507783606,"results":"72","hashOfConfig":"41"},{"size":1279,"mtime":1651102399587,"results":"73","hashOfConfig":"41"},{"size":3856,"mtime":1651372182297,"results":"74","hashOfConfig":"41"},{"size":3518,"mtime":1651460525717,"results":"75","hashOfConfig":"41"},{"size":3454,"mtime":1651458899117,"results":"76","hashOfConfig":"41"},{"size":1450,"mtime":1651371500790,"results":"77","hashOfConfig":"41"},{"size":1443,"mtime":1651371557748,"results":"78","hashOfConfig":"41"},{"size":1451,"mtime":1651371593854,"results":"79","hashOfConfig":"41"},{"size":2907,"mtime":1651504780737,"results":"80","hashOfConfig":"41"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1dfpj0g",{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1gpk62w",{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"84"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"122"},"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\index.js",[],[],["223","224"],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\reportWebVitals.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\App.js",["225","226","227","228","229"],[],"import React from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport {BrowserRouter as Router, Routes, Route } from 'react-router-dom'\r\nimport Home from \"./pages\";\r\nimport Applications from './pages/applications';\r\nimport Network from './pages/network';\r\nimport InterviewPrep from './pages/interviewPrep';\r\nimport Coding from './pages/coding';\r\nimport GooglePrep from './pages/googlePrep'\r\nimport FacebookPrep from './pages/facebookPrep';\r\nimport AmazonPrep from './pages/AmazonPrep';\r\nimport NetflixPrep from './pages/NetflixPrep';\r\nimport ApplePrep from './pages/ApplePrep';\r\nimport MicrosoftPrep from './pages/microsoftPrep';\r\nimport Guide1 from \"./pages/guide1\";\r\nimport Guide2 from \"./pages/guide2\";\r\nimport Guide3 from \"./pages/guide3\";\r\nimport FeedbackForm from \"./pages/feedbackform\";\r\nimport Settings from \"./pages/settings\";\r\nimport \"./App.css\";\r\n\r\nconst GlobalStyle1 = createGlobalStyle`\r\n  html {\r\n    --bgcolor: #fafafa;\r\n    --bg2color: #e4e5f1;\r\n    --btncolor: #484b6a;\r\n    --btntxtcolor: #fafafa;\r\n    --navcolor: #484b6a;\r\n    --navtxtcolor: #fafafa;\r\n    --navtxtcolor2: #B6CCD7;\r\n    --hdrcolor: #6082B6;\r\n    --txtcolor: #484b6a;\r\n    --brdrcolor: #0d0d0d;\r\n    --shdwcolor: #ccc;\r\n    --lnkcolor: #406094;\r\n    --lnk2color: #262948;\r\n  }\r\n`\r\n\r\nconst GlobalStyle2 = createGlobalStyle`\r\n  html {\r\n    --bgcolor: #484b6a;\r\n    --bg2color: #717283;\r\n    --btncolor: #9394a5;\r\n    --btntxtcolor: #262948;\r\n    --navcolor: #262948;\r\n    --navtxtcolor: #fafafa;\r\n    --navtxtcolor2: #B6CCD7;\r\n    --hdrcolor: #ADD8E6;\r\n    --txtcolor: #fafafa;\r\n    --brdrcolor: #0d0d0d;\r\n    --shdwcolor: rgba(50,50,50,0.5);\r\n    --lnkcolor: #9cc7b5;\r\n    --lnk2color: #8bb6c4;\r\n  }\r\n`\r\n\r\nconst GlobalStyleOriginal = createGlobalStyle`\r\n  html {\r\n    --bgcolor: rgb(254,251,234);\r\n    --bg2color: rgb(250, 250, 250);\r\n    --btncolor: rgb(100, 0, 0);\r\n    --btntxtcolor: rgb(255, 255, 255);\r\n    --navcolor: rgb(80, 0, 0);\r\n    --navtxtcolor: rgb(255, 255, 255);\r\n    --navtxtcolor2: #B6CCD7;\r\n    --hdrcolor: rgb(100, 0, 0);\r\n    --txtcolor: rgb(0, 0, 0);\r\n    --brdrcolor: #0d0d0d;\r\n    --shdwcolor: #ccc;\r\n  }\r\n`\r\n\r\nwindow.onload = function() {\r\n  var defaultStyle = localStorage.getItem(\"current-style\");\r\n  if (!defaultStyle) {\r\n      localStorage.setItem(\"current-style\", \"style2\");\r\n  }\r\n  var thisCompany = localStorage.getItem(\"this-company\");\r\n  if (!thisCompany) {\r\n    localStorage.setItem(\"this-company\", \"None\");\r\n  }\r\n  var localDBAddress = \"http://localhost:3002\";\r\n  var publicDBAddress = \"184.92.91.83:3002\";\r\n  localStorage.setItem(\"db-address\", localDBAddress);\r\n  var localCompAddress = \"http://localhost:3001\";\r\n  var publicCompAddress = \"184.92.91.83:3001\";\r\n  localStorage.setItem(\"comp-address\", publicCompAddress);\r\n}\r\n\r\nfunction App() {\r\n  document.title = \"Aggie Fangs\";\r\n\r\n  const whichStyle = () => {\r\n    var styleInput = localStorage.getItem(\"current-style\");\r\n    var thisStyle = <GlobalStyle1/>;\r\n    if (styleInput == \"style2\") {\r\n      thisStyle = <GlobalStyle2/>;\r\n    }\r\n    return thisStyle;\r\n  };\r\n  \r\n  return (\r\n      <Router>\r\n        {whichStyle()}\r\n        <Navbar />\r\n        <Routes>\r\n          <Route exact path=\"/\" element = {<Home />}/>\r\n          <Route path=\"/applications\" element = {<Applications/>}/>\r\n          <Route path=\"/feedbackform\" element = {<FeedbackForm/>}/>\r\n          <Route path=\"/interviewPrep\" element = {<InterviewPrep/>}/>\r\n          <Route path=\"/coding\" element = {<Coding/>}/>\r\n          <Route path=\"/network\" element = {<Network/>}/>\r\n          <Route path=\"/googlePrep\" element = {<GooglePrep/>}/>\r\n          <Route path=\"/facebookPrep\" element = {<FacebookPrep/>}/>\r\n          <Route path=\"/amazonPrep\" element = {<AmazonPrep/>}/>\r\n          <Route path=\"/netflixPrep\" element = {<NetflixPrep/>}/>\r\n          <Route path=\"/applePrep\" element = {<ApplePrep/>}/>\r\n          <Route path=\"/microsoftPrep\" element = {<MicrosoftPrep/>}/>\r\n          <Route path=\"/guide1\" element = {<Guide1/>}/>\r\n          <Route path=\"/guide2\" element = {<Guide2/>}/>\r\n          <Route path=\"/guide3\" element = {<Guide3/>}/>\r\n          <Route path=\"/settings\" element = {<Settings/>}/>\r\n        </Routes>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\network.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\applications.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\interviewPrep.js",["230"],[],"import React from 'react'\r\nimport Cards from '../components/Cards'\r\nimport Form from '../components/Form'\r\nconst InterviewPrep = () => {\r\n  return (\r\n    <div className='company-page'>\r\n      <Cards />\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default InterviewPrep","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\index.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\Navbar\\index.js",["231","232"],[],"import React from 'react'\r\nimport {Nav, NavLink, Bars, NavMenu, NavBtn, NavBtnLink} from \"./NavbarElements\";\r\nimport logo from \"./../../images/Aggie_Fangs_Logo_Transparent.png\";\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n    <Nav>\r\n        <NavLink exact to=\"/\">\r\n            <img src={logo} alt=\"logo\" height=\"100%\"/>\r\n            <h1 class=\"nav-title\">Aggie Fangs</h1>\r\n        </NavLink>\r\n        <Bars />\r\n        <NavMenu>\r\n            <NavLink to=\"/feedbackform\" activeStyle>\r\n                <div class = \"nav-link\">Share Experience</div>\r\n            </NavLink>\r\n            <NavLink to=\"/interviewPrep\" activeStyle>\r\n                <div class = \"nav-link\">Interview Prep</div>\r\n            </NavLink>\r\n            <NavLink to=\"/coding\" activeStyle>\r\n                <div class = \"nav-link\">Coding Problems</div>\r\n            </NavLink>\r\n            <NavLink to=\"/guide1\" activeStyle>\r\n                <div class = \"nav-link\">Interview Guides</div>\r\n            </NavLink>\r\n            <NavLink to=\"/settings\" activeStyle>\r\n                <div class = \"nav-link\">Settings</div>\r\n            </NavLink>\r\n        </NavMenu>\r\n    </Nav>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar;","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\Cards.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\Navbar\\NavbarElements.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\CardItems.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\coding.js",["233","234","235"],[],"import React, { Component, useState } from 'react'\r\nimport logo from \"./../images/Aggie_Fangs_Logo_Transparent.png\";\r\nimport styled from \"styled-components\";\r\nimport CodingProblemList from \"./codingProb.js\";\r\nimport Editor from \"@monaco-editor/react\"\r\nimport axios from 'axios';\r\nimport Axios from 'axios';\r\nimport { FaThList } from 'react-icons/fa';\r\n\r\nconst RunButton = styled.button `\r\n  cursor: pointer;\r\n  background-color: var(--btncolor);\r\n  width: 100px;\r\n  height: 50px;\r\n  padding: 5px 15px;\r\n  border-radius: 8px;\r\n  color: var(--btntxtcolor);\r\n  text-align: center;\r\n  font-size: 13px;\r\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\r\n  float: left;\r\n  margin-right: 1rem;\r\n`\r\n\r\nvar probName = <text></text>;\r\nvar probConcepts = <text></text>;\r\nvar probPrompt = <text></text>;\r\nvar probCompany = <text></text>;\r\n\r\nvar compAddress = localStorage.getItem(\"comp-address\");\r\n\r\nvar startingCode = \"// C++ \\n#include<bits/stdc++.h>\\n#include <stdio.h>\\nusing namespace std;\\n\\nint main() {\\n\\t// enter your code here \\n\\t\\n\\t\\n\\treturn 0;\\n}\";\r\nvar savedCode = localStorage.getItem(\"saved-code\");\r\nif (savedCode) {\r\n    startingCode = savedCode;\r\n}\r\n\r\nclass Coding extends Component {\r\n    getProblem () {\r\n        // todo\r\n        // this function will find the current problem and change what the page will output accordingly\r\n        probName = <text>String Reversal</text>;\r\n        probConcepts = <text>Traversal of Lists or Strings, Basic Problem Solving</text>;\r\n        probPrompt = <text>Given a string, write a function that reverses the string such that the old first element is now the last element, the old second element is now the second to last element, etc.</text>;\r\n        probName = localStorage.getItem(\"problem-title\");\r\n        probConcepts = localStorage.getItem(\"problem-concepts\");\r\n        probPrompt = localStorage.getItem(\"problem-prompt\");\r\n        probCompany = localStorage.getItem(\"problem-company\");\r\n    }\r\n    handleChange(event) {\r\n        var thisCompany = event.target.value;\r\n        localStorage.setItem(\"this-company\", thisCompany);\r\n        this.setState({\r\n            selectedOption: thisCompany\r\n        });\r\n    }\r\n    saveCode() {\r\n        localStorage.setItem(\"saved-code\", this.state.userCode);\r\n    }\r\n    \r\n    constructor() {\r\n        super();\r\n        var thisCompany = localStorage.getItem(\"this-company\");\r\n        if (!thisCompany) {\r\n            thisCompany = \"None\";\r\n        }\r\n        this.state = {\r\n            name: \"react\",\r\n            selectedOption: thisCompany,\r\n            userCode: \"#include<bits/stdc++.h>\\nusing namespace std;\\nint main() {\\n\\treturn 0;\\n}\",\r\n            language: \"cpp17\",\r\n            userOutput: \"Terminal Output\",\r\n            userInput: \"\",\r\n            loading: false\r\n        };\r\n        this.saveCode = this.saveCode.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.compile = this.compile.bind(this);\r\n        this.getProblem();\r\n    }\r\n    async compile(){\r\n        this.setState({userOutput: \"Loading...\"})\r\n        axios.post(compAddress + `/compile`, {\r\n            code: this.state.userCode,\r\n            stdin: this.state.userInput\r\n            }).then((res) => {\r\n                console.log(res);\r\n                this.setState({userOutput: res.data.output})\r\n          }).then(() => {\r\n          })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"coding coding-header\">\r\n                    <div class=\"split coding-logo\">\r\n                        <img src={logo} alt=\"logo\" />\r\n                    </div>\r\n                    <div class=\"split coding-problem-name\">\r\n                        <h1>Problem Name: {probName}</h1>\r\n                        <h2>Concepts Covered: {probConcepts}</h2>\r\n                        <h2>Company: {probCompany}</h2>\r\n                    </div>\r\n                </div>\r\n                <div class=\"coding coding-main\">\r\n                    <div class=\"split problem-list\">\r\n                        <form className='problem-sort'>\r\n                            <h1>Sort by:</h1>\r\n                            <div className='radio'>\r\n                                <label>\r\n                                    <input\r\n                                        type = \"radio\"\r\n                                        value = \"None\"\r\n                                        checked = {this.state.selectedOption === \"None\"}\r\n                                        onChange = {this.handleChange}\r\n                                    />\r\n                                    None\r\n                                </label>\r\n                            </div>\r\n                            <div className='radio'>\r\n                                <label>\r\n                                    <input\r\n                                        type = \"radio\"\r\n                                        value = \"Google\"\r\n                                        checked = {this.state.selectedOption === \"Google\"}\r\n                                        onChange = {this.handleChange}\r\n                                    />\r\n                                    Google\r\n                                </label>\r\n                            </div>\r\n                            <div className='radio'>\r\n                                <label>\r\n                                    <input\r\n                                        type = \"radio\"\r\n                                        value = \"Facebook\"\r\n                                        checked = {this.state.selectedOption === \"Facebook\"}\r\n                                        onChange = {this.handleChange}\r\n                                    />\r\n                                    Facebook\r\n                                </label>\r\n                            </div>\r\n                            <div className='radio'>\r\n                                <label>\r\n                                    <input\r\n                                        type = \"radio\"\r\n                                        value = \"Amazon\"\r\n                                        checked = {this.state.selectedOption === \"Amazon\"}\r\n                                        onChange = {this.handleChange}\r\n                                    />\r\n                                    Amazon\r\n                                </label>\r\n                            </div>\r\n                            <div className='radio'>\r\n                                <label>\r\n                                    <input\r\n                                        type = \"radio\"\r\n                                        value = \"Netflix\"\r\n                                        checked = {this.state.selectedOption === \"Netflix\"}\r\n                                        onChange = {this.handleChange}\r\n                                    />\r\n                                    Netflix\r\n                                </label>\r\n                            </div>\r\n                            <div className='radio'>\r\n                                <label>\r\n                                    <input\r\n                                        type = \"radio\"\r\n                                        value = \"Apple\"\r\n                                        checked = {this.state.selectedOption === \"Apple\"}\r\n                                        onChange = {this.handleChange}\r\n                                    />\r\n                                    Apple\r\n                                </label>\r\n                            </div>\r\n                            <div className='radio'>\r\n                                <label>\r\n                                    <input\r\n                                        type = \"radio\"\r\n                                        value = \"Microsoft\"\r\n                                        checked = {this.state.selectedOption === \"Microsoft\"}\r\n                                        onChange = {this.handleChange}\r\n                                    />\r\n                                    Microsoft\r\n                                </label>\r\n                            </div>\r\n                        </form>\r\n                        <CodingProblemList/>\r\n                    </div>\r\n                    <div class=\"split problem-statement\">\r\n                        <h2>Problem Prompt:</h2>\r\n                        <body>{probPrompt}</body>\r\n                        <h2>Your Code:</h2>\r\n                        <div class=\"coding-problem-left\">\r\n                            <Editor\r\n                                className='code-editor'\r\n                                defaultLanguage = \"cpp\"\r\n                                defaultValue=  {startingCode}\r\n                                onChange={(value) => this.setState({userCode: value})}\r\n                            />\r\n                            <RunButton class=\"run-button\" onClick={this.compile}>Run Code</RunButton>\r\n                            <RunButton class=\"save-button\" onClick={this.saveCode}>Save</RunButton>\r\n                        </div>\r\n                        <div class=\"coding-problem-right\">\r\n                            <textarea disabled class=\"compiler-window\" id=\"terminal\" name=\"terminal\" value={this.state.userOutput}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Coding;",["236","237"],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\googlePrep.js",["238","239","240","241"],[],"import React, {useState} from 'react'\r\nimport ReviewList from '../components/ReviewList'\r\nimport VideoComp from '../components/VideoPlayer/VideoComp'\r\nimport FeedbackView from '../components/FeedbackView';\r\nimport LeetCodeURL from '../components/LeetCodeURL'\r\nimport HackerRankURL from '../components/HackerRankURL'\r\nimport OtherURL from '../components/OtherURL'\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nvar companyName = <text>Google</text>;\r\n\r\nconst GooglePrep = () => {\r\n  const [reviews, setReviews] = useState([])\r\n\r\n  localStorage.setItem(\"this-company\", \"Google\");\r\n\r\n  return (\r\n\r\n    <div class='company-page'>\r\n        <div class='company-header'>\r\n          <h1>Interview Preparation Resources For {companyName}</h1>\r\n        </div>\r\n        <div class='split'>\r\n          <div class='company-left'>\r\n            <div class='company-section'>\r\n              <h1>Our Coding Problems</h1>\r\n              <body>\r\n                Go to our <a href=\"/coding\">practice coding problems</a> and select the \"Sort By {companyName}\" option.\r\n              </body>\r\n            </div>\r\n            <div class='company-section'>\r\n              <h1>HackerRank Links</h1>\r\n              <ul>\r\n                <HackerRankURL/>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class='company-right'>\r\n            <div class='company-section'>\r\n              <h1>LeetCode Problems</h1>\r\n              <ul>\r\n                <LeetCodeURL/>\r\n              </ul>\r\n            </div>\r\n            <div class='company-section'>\r\n              <h1>More Resources</h1>\r\n              <ul>\r\n                <OtherURL/>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class='company-section'>\r\n          <h1>Youtube Playlist</h1>\r\n          <VideoComp playListId = \"PLi9RQVmJD2fapKJ4DnZzAn55NJfo5IM1c\"/>\r\n        </div>\r\n        <div class=\"company-section reviewList\">\r\n          <h1>Interview Reviews For {companyName}</h1>\r\n          <FeedbackView/>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GooglePrep\r\n","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\facebookPrep.js",["242","243","244","245"],[],"import React, {useState} from 'react'\r\nimport ReviewList from '../components/ReviewList'\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport VideoComp from '../components/VideoPlayer/VideoComp'\r\nimport FeedbackView from '../components/FeedbackView';\r\nimport LeetCodeURL from '../components/LeetCodeURL'\r\nimport HackerRankURL from '../components/HackerRankURL'\r\nimport OtherURL from '../components/OtherURL'\r\n\r\nvar companyName = <text>Facebook</text>;\r\n\r\nconst FacebookPrep = () => {\r\n    const [reviews, setReviews] = useState([])\r\n\r\n    localStorage.setItem(\"this-company\", \"Facebook\");\r\n\r\n  return (\r\n    <div class='company-page'>\r\n        <div class='company-header'>\r\n          <h1>Interview Preparation Resources For {companyName}</h1>\r\n        </div>\r\n        <div class='split'>\r\n          <div class='company-left'>\r\n            <div class='company-section'>\r\n              <h1>Our Coding Problems</h1>\r\n              <body>\r\n                Go to our <a href=\"/coding\">practice coding problems</a> and select the \"Sort By {companyName}\" option.\r\n              </body>\r\n            </div>\r\n            <div class='company-section'>\r\n              <h1>HackerRank Links</h1>\r\n              <ul>\r\n                <HackerRankURL/>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class='company-right'>\r\n            <div class='company-section'>\r\n              <h1>LeetCode Problems</h1>\r\n              <ul>\r\n                <LeetCodeURL/>\r\n              </ul>\r\n            </div>\r\n            <div class='company-section'>\r\n              <h1>More Resources</h1>\r\n              <ul>\r\n                <OtherURL/>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class='company-section'>\r\n          <h1>Youtube Playlist</h1> \r\n          <VideoComp playListId = \"PLi9RQVmJD2fYckvJZSKA4YcUQ4eyNupuY\"/>\r\n        </div>\r\n        <div class=\"company-section reviewList\">\r\n          <h1>Interview Reviews For {companyName}</h1>\r\n          <FeedbackView/>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FacebookPrep","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\AmazonPrep.js",["246","247","248","249"],[],"import React, {useState} from 'react'\r\nimport ReviewList from '../components/ReviewList'\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport VideoComp from '../components/VideoPlayer/VideoComp'\r\nimport FeedbackView from '../components/FeedbackView';\r\nimport LeetCodeURL from '../components/LeetCodeURL'\r\nimport HackerRankURL from '../components/HackerRankURL'\r\nimport OtherURL from '../components/OtherURL'\r\n\r\nvar companyName = <text>Amazon</text>;\r\n\r\nconst AmazonPrep = () => {\r\n    const [reviews, setReviews] = useState([])\r\n\r\n    localStorage.setItem(\"this-company\", \"Amazon\");\r\n\r\n  return (\r\n    <div class='company-page'>\r\n        <div class='company-header'>\r\n          <h1>Interview Preparation Resources For {companyName}</h1>\r\n        </div>\r\n        <div class='split'>\r\n          <div class='company-left'>\r\n            <div class='company-section'>\r\n              <h1>Our Coding Problems</h1>\r\n              <body>\r\n                Go to our <a href=\"/coding\">practice coding problems</a> and select the \"Sort By {companyName}\" option.\r\n              </body>\r\n            </div>\r\n            <div class='company-section'>\r\n              <h1>HackerRank Links</h1>\r\n              <ul>\r\n                <HackerRankURL/>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class='company-right'>\r\n            <div class='company-section'>\r\n              <h1>LeetCode Problems</h1>\r\n              <ul>\r\n                <LeetCodeURL/>\r\n              </ul>\r\n            </div>\r\n            <div class='company-section'>\r\n              <h1>More Resources</h1>\r\n              <ul>\r\n                <OtherURL/>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class='company-section'>\r\n          <h1>Youtube Playlist</h1>\r\n          <VideoComp playListId = \"PLi9RQVmJD2fZgRyOunLyt94uVbJL43pZ_\"/>  \r\n        </div>\r\n        <div class=\"company-section reviewList\">\r\n          <h1>Interview Reviews For {companyName}</h1>\r\n          <FeedbackView/>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AmazonPrep","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\ApplePrep.js",["250","251","252","253"],[],"import React, {useState} from 'react'\r\nimport ReviewList from '../components/ReviewList'\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport VideoComp from '../components/VideoPlayer/VideoComp'\r\nimport FeedbackView from '../components/FeedbackView';\r\nimport LeetCodeURL from '../components/LeetCodeURL'\r\nimport HackerRankURL from '../components/HackerRankURL'\r\nimport OtherURL from '../components/OtherURL'\r\n\r\nvar companyName = <text>Apple</text>;\r\n\r\nconst ApplePrep = () => {\r\n    const [reviews, setReviews] = useState([])\r\n\r\n    localStorage.setItem(\"this-company\", \"Apple\");\r\n\r\n  return (\r\n    <div class='company-page'>\r\n        <div class='company-header'>\r\n          <h1>Interview Preparation Resources For {companyName}</h1>\r\n        </div>\r\n        <div class='split'>\r\n          <div class='company-left'>\r\n            <div class='company-section'>\r\n              <h1>Our Coding Problems</h1>\r\n              <body>\r\n                Go to our <a href=\"/coding\">practice coding problems</a> and select the \"Sort By {companyName}\" option.\r\n              </body>\r\n            </div>\r\n            <div class='company-section'>\r\n              <h1>HackerRank Links</h1>\r\n              <ul>\r\n                <HackerRankURL/>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class='company-right'>\r\n            <div class='company-section'>\r\n              <h1>LeetCode Problems</h1>\r\n              <ul>\r\n                <LeetCodeURL/>\r\n              </ul>\r\n            </div>\r\n            <div class='company-section'>\r\n              <h1>More Resources</h1>\r\n              <ul>\r\n                <OtherURL/>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class='company-section'>\r\n          <h1>Youtube Playlist</h1>\r\n          <VideoComp playListId = \"PLtQWXpf5JNGLoTvfcT9sI_SxBsWOwGsuZ\"/>\r\n        </div>\r\n        <div class=\"company-section reviewList\">\r\n          <h1>Interview Reviews For {companyName}</h1>\r\n          <FeedbackView/>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ApplePrep","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\NetflixPrep.js",["254","255","256","257"],[],"import React, {useState} from 'react'\r\nimport ReviewList from '../components/ReviewList'\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport VideoComp from '../components/VideoPlayer/VideoComp'\r\nimport FeedbackView from '../components/FeedbackView';\r\nimport LeetCodeURL from '../components/LeetCodeURL'\r\nimport HackerRankURL from '../components/HackerRankURL'\r\nimport OtherURL from '../components/OtherURL'\r\n\r\nvar companyName = <text>Netflix</text>;\r\n\r\nconst NetflixPrep = () => {\r\n    const [reviews, setReviews] = useState([])\r\n\r\n    localStorage.setItem(\"this-company\", \"Netflix\");\r\n\r\n  return (\r\n    <div class='company-page'>\r\n        <div class='company-header'>\r\n          <h1>Interview Preparation Resources For {companyName}</h1>\r\n        </div>\r\n        <div class='split'>\r\n          <div class='company-left'>\r\n            <div class='company-section'>\r\n              <h1>Our Coding Problems</h1>\r\n              <body>\r\n                Go to our <a href=\"/coding\">practice coding problems</a> and select the \"Sort By {companyName}\" option.\r\n              </body>\r\n            </div>\r\n            <div class='company-section'>\r\n              <h1>HackerRank Links</h1>\r\n              <ul>\r\n                <HackerRankURL/>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class='company-right'>\r\n            <div class='company-section'>\r\n              <h1>LeetCode Problems</h1>\r\n              <ul>\r\n                <LeetCodeURL/>\r\n              </ul>\r\n            </div>\r\n            <div class='company-section'>\r\n              <h1>More Resources</h1>\r\n              <ul>\r\n                <OtherURL/>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class='company-section'>\r\n          <h1>Youtube Playlist</h1>\r\n          <VideoComp playListId = \"PLi9RQVmJD2fYckvJZSKA4YcUQ4eyNupuY\"/>\r\n        </div>\r\n        <div class=\"company-section reviewList\">\r\n          <h1>Interview Reviews For {companyName}</h1>\r\n          <FeedbackView/>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NetflixPrep","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\microsoftPrep.js",["258","259","260","261","262"],[],"import React, {useState} from 'react'\r\nimport ReviewList from '../components/ReviewList'\r\nimport {Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport VideoComp from '../components/VideoPlayer/VideoComp'\r\nimport FeedbackView from '../components/FeedbackView';\r\nimport LeetCodeURL from '../components/LeetCodeURL'\r\nimport HackerRankURL from '../components/HackerRankURL'\r\nimport OtherURL from '../components/OtherURL'\r\n\r\nconst LinkButton = styled.button `\r\n  cursor: pointer;\r\n  background-color: rgb(100, 0, 0);\r\n  width: 300px;\r\n  height: 150px;\r\n  padding: 5px 15px;\r\n  border-radius: 20px;\r\n  text-decoration: none;\r\n  color: white;\r\n  font-size: 40px;\r\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\r\n\r\n  overflow-x: hidden;\r\n  float: left;\r\n`\r\n\r\nvar companyName = <text>Microsoft</text>;\r\n\r\nconst MicrosoftPrep = () => {\r\n    const [reviews, setReviews] = useState([])\r\n\r\n    localStorage.setItem(\"this-company\", \"Microsoft\");\r\n\r\n  return (\r\n    <div class='company-page'>\r\n        <div class='company-header'>\r\n          <h1>Interview Preparation Resources For {companyName}</h1>\r\n        </div>\r\n        <div class='split'>\r\n          <div class='company-left'>\r\n            <div class='company-section'>\r\n              <h1>Our Coding Problems</h1>\r\n              <body>\r\n                Go to our <a href=\"/coding\">practice coding problems</a> and select the \"Sort By {companyName}\" option.\r\n              </body>\r\n            </div>\r\n            <div class='company-section'>\r\n              <h1>HackerRank Links</h1>\r\n              <ul>\r\n                <HackerRankURL/>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class='company-right'>\r\n            <div class='company-section'>\r\n              <h1>LeetCode Problems</h1>\r\n              <ul>\r\n                <LeetCodeURL/>\r\n              </ul>\r\n            </div>\r\n            <div class='company-section'>\r\n              <h1>More Resources</h1>\r\n              <ul>\r\n                <OtherURL/>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class='company-section'>\r\n          <h1>Youtube Playlist</h1>\r\n          <VideoComp playListId = \"PLi9RQVmJD2fYMiu6JOL3PiEVh_Is6jAin\"/>\r\n        </div>\r\n        <div class=\"company-section reviewList\">\r\n          <h1>Interview Reviews For {companyName}</h1>\r\n          <FeedbackView/>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MicrosoftPrep","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\Notion.js",["263","264","265","266","267","268"],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\ReviewList.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\Form.js",["269","270","271","272","273","274","275"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styled from \"styled-components\";\r\nimport axios from 'axios';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport loadingGif from \"../images/loading.gif\"\r\n\r\nconst database_id = '22f238cc864e4a1496e42e3d8a2c05c6';\r\n//const secretKey = 'secret_AFKZAuWeh8KSRFU7dK4vcdUTEQG1pb3CyQtwBIdj9Ws'\r\n\r\nvar dbAddress = localStorage.getItem(\"db-address\");\r\n\r\nconst SubmitButton = styled.button `\r\n  cursor: pointer;\r\n  background-color: var(--btncolor);\r\n  padding: 1.5rem;\r\n  border-radius: 20px;\r\n  text-decoration: none;\r\n  color: var(--btntxtcolor);\r\n  font-size: 40px;\r\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\r\n\r\n  overflow-x: hidden;\r\n  float: center;\r\n`\r\nconst Form = ({form, reviews, setForm, setReviews}) => {\r\n  const [tags, setTags] = useState(null);\r\n  const[selectedValue, setSelectedValue] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetch(dbAddress + '/tags',{\r\n    method: \"GET\"\r\n  }).then(response => {\r\n    if (response.type === 'opaque' || response.ok) {\r\n        response.json().then(revItems => {\r\n          setTags(revItems)\r\n      });\r\n    } \r\n  }).catch(error => {\r\n    console.log(\"Error is: \", error)\r\n  });\r\n  },[]);\r\n\r\n  const handleRemovedTag = e => {\r\n    //\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const{name, value} = e.target;\r\n    setForm({...form, [name]: value});\r\n    console.log(\"Form is set to: \", form)\r\n  }\r\n\r\n  \r\n  const handleSelectedChange = e => {\r\n    console.log(\"selected change detected\")\r\n    setSelectedValue(Array.isArray(e) ? e.map(x => x.value) : [\"empty\"]);\r\n    console.log(\"selectedValue\",selectedValue)\r\n  }\r\n  const checkValidity = () => {\r\n    // todo\r\n    return true;\r\n  }\r\n  const handleSubmit = e => {\r\n    fetch('http://localhost:3002/addRev', {\r\n      mode:'no-cors',\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n      body: JSON.stringify({\r\n        title: form.company,\r\n        name: form.name,\r\n        userEmail: form.email,\r\n        description: form.review,\r\n        tag: form.job\r\n      }) \r\n    });\r\n/*  if (checkValidity()) {\r\n      alert(\"The input data is good!\");\r\n      e.preventDefault();\r\n      setReviews([...reviews, form]);\r\n      setForm({company: \"\", review: \"\", id: uuidv4()});\r\n    } else {\r\n      alert(\"Please enter valid information.\")\r\n    } */\r\n   // console.log(\"form is: \", form, \" and the job is: \", form.job )\r\n  }\r\n  \r\n  if(tags == null){\r\n    return(\r\n      <div>\r\n      <img src={loadingGif} alt=\"wait until the page loads\" />\r\n      <h1>Loading...</h1> \r\n    </div>\r\n    )\r\n\r\n  } else {\r\n    return (  \r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n          <h2>Share Your Experience</h2>\r\n            <label htmlFor='Company'>Company</label><br/>\r\n            <select placeholder=\"Company\"\r\n                id=\"company\"\r\n                name=\"company\"\r\n                value={form.company}\r\n                onChange={handleChange}>\r\n                <option value=\"None\">Select Company</option>\r\n                <option value=\"Google\">Google</option>\r\n                <option value=\"Facebook\">Facebook</option>\r\n                <option value=\"Amazon\">Amazon</option>\r\n                <option value=\"Netflix\">Netflix</option>\r\n                <option value=\"Apple\">Apple</option>\r\n                <option value=\"Microsoft\">Microsoft</option>\r\n            </select><br/>\r\n\r\n            <label htmlFor='JobTitle'>Job Title</label><br/>\r\n            <select placeholder=\"Job Type\"\r\n              id=\"job\"\r\n              name=\"job\"\r\n              value={form.job}\r\n              onChange={handleChange}>\r\n              <option value=\"None\">Select Job Type(s)</option>\r\n              {tags.map(company =>\r\n                (<option value = {company.id}>{company.name}</option>)\r\n                )}\r\n              </select><br/>\r\n\r\n            <label htmlFor='Name'>Name</label><br/>\r\n            <textarea\r\n                   value={form.name}\r\n                   placeholder=\"Enter your name\"  \r\n                   id=\"name\" \r\n                   name=\"name\" \r\n                   autoComplete=\"off\"\r\n                   onChange={handleChange}>\r\n            </textarea><br/>\r\n            <label htmlFor='Email'>Valid School Email</label><br/>\r\n            <textarea\r\n                   value={form.email}\r\n                   placeholder=\"Enter your valid school email\"\r\n                   id=\"email\" \r\n                   name=\"email\" \r\n                   autoComplete=\"off\"\r\n                   onChange={handleChange}>\r\n            </textarea><br/>\r\n            <label htmlFor='review'>Review</label><br/>\r\n            <div class=\"review-box\"><textarea\r\n                   value={form.review}\r\n                   placeholder=\"Give feedback\"  \r\n                   id=\"review\" \r\n                   name=\"review\" \r\n                   autoComplete=\"off\"\r\n                   onChange={handleChange}>\r\n            </textarea></div><br/>\r\n            <SubmitButton >\r\n              Submit\r\n            </SubmitButton>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default Form","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\ReviewItem.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\guide1.js",["276"],[],"import React from 'react'\r\nimport logo from \"./../images/Aggie_Fangs_Logo_Transparent.png\";\r\nimport styled from \"styled-components\";\r\nimport {Link } from \"react-router-dom\";\r\n\r\nconst LinkButton = styled.button `\r\n  cursor: pointer;\r\n  background-color: var(--btncolor);\r\n  width: 200px;\r\n  height: 90px;\r\n  padding: 5px 15px;\r\n  border-radius: 20px;\r\n  text-decoration: none;\r\n  color: var(--btntxtcolor);\r\n  font-size: 23px;\r\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\r\n\r\n  overflow-x: hidden;\r\n  float: left;\r\n  margin-right: 20px;\r\n`\r\n\r\nfunction Guide1() {\r\n    return (\r\n        <div>\r\n            <div class=\"guide-header\">\r\n                <h1>Resumes</h1>\r\n                <h2>Guides:</h2>\r\n                <Link to=\"/guide1\"><LinkButton>\r\n                    Resumes\r\n                </LinkButton></Link>\r\n                <Link to=\"/guide2\"><LinkButton>\r\n                    Personality Interviews\r\n                </LinkButton></Link>\r\n                <Link to=\"/guide3\"><LinkButton>\r\n                    Technical Interviews\r\n                </LinkButton></Link>\r\n            </div>\r\n            <div class=\"guide-section\">\r\n                <h2>Why Should Your Resume Look Good?</h2>\r\n                <body>\r\n                    As recruiters sort through hundreds or even thousands of applications \r\n                    each day, the biggest thing that they all pay attention to is the applicant's\r\n                    resume. They might ask themselves these questions:\r\n                    <ul>\r\n                        <li><i>Who has the most diverse project experience?</i></li>\r\n                        <li><i>Who has the most relevant skillset for our company?</i></li>\r\n                        <li><i>Who has the most relevant prior job experience?</i></li>\r\n                    </ul>\r\n                    Or sometimes even:\r\n                    <ul>\r\n                        <li><i>Who has the higher GPA in school?</i></li>\r\n                        <li><i>Who has the more professional resume?</i></li>\r\n                    </ul>\r\n                    As a growing software engineering student, you might not have the most appealing \r\n                    resume to every single recruiter. But what you can do is make yourself stand out\r\n                    in a way such that recruiters will notice you and be interested in your application.\r\n                    Doing this is simpler than you may think.\r\n                </body>\r\n            </div>\r\n            <div class=\"guide-section\">\r\n                <h2>Formatting</h2>\r\n                <body>\r\n                    When a recruiter picks up your resume, you are immediately up against the clock.\r\n                    According to a study by <a href=\"https://career.mercy.edu/blog/2019/11/08/eye-tracking-study-shows-recruiters-look-at-resumes-for-7-seconds/#:~:text=In%20addition%2C%20a%20well%20organized,impression%20you%20make%20is%20critical.\">Mercy College</a>,\r\n                    the average recruiter spends 7 seconds reviewing each resume. That's not a lot of time!\r\n                    You need to format your resume in a way that prominently shows all of the best things \r\n                    about you. Here are a few important things to keep in mind when formatting your resume:\r\n                    <ul>\r\n                        <li><i>Leave out any unnecessary graphics and styling.</i> Anything that will distract a recruiter is a no-go. Plain, unstyled text is to-the-point and will make the most of your 7 seconds.</li>\r\n                        <li><i>Put your name, contact information, and GPA at the top.</i> These three are all important things that will be needed and thus should be prominent on the page.</li>\r\n                        <li><i>Use brief descriptions.</i> The longer a description on a project or skill is, the less likely it is that it will actually be read.</li>\r\n                    </ul>\r\n                </body>\r\n            </div>\r\n            <div class=\"guide-section\">\r\n                <h2>Education</h2>\r\n                <body>\r\n                    When writing about your education in a resume, you do not need to list your entire \r\n                    history with school. Instead, write about things that recruiters will want to see, such as:\r\n                    <ul>\r\n                        <li>What college you are at or have graduated from, including a start and end date</li>\r\n                        <li>Your major and minor (and area of emphasis if applicable)</li>\r\n                        <li>The <i>relevant</i> coursework you have taken</li>\r\n                        <li>Your expected graduation date if applicable</li>\r\n                        <li>Your GPA (it's okay to have it twice on the page)</li>\r\n                    </ul>\r\n                </body>\r\n            </div>\r\n            <div class=\"guide-section\">\r\n                <h2>Work Experience</h2>\r\n                <body>\r\n                    Again, as in the education portion, you do not need to list every job you have ever \r\n                    worked in. For instance, for a software engineering job, you don't need to talk about the summers\r\n                    you have spent lifeguarding or working at a kids' camp. Instead, be to-the-point. Only list <i>relevant</i>\r\n                    work experience. Under each job, make sure to list:\r\n                    <ul>\r\n                        <li>The company name and your job title</li>\r\n                        <li>What the company does</li>\r\n                        <li>A link to the company's website</li>\r\n                        <li>The start and end dates at the job</li>\r\n                        <li>Notable projects you worked on during the job</li>\r\n                    </ul>\r\n                    If you don't have any work experience, talk briefly about what you are looking for in \r\n                    a software engineering job and what your general interests are within computer science. \r\n                    Put extra time into the projects section to show the recruiter more about your programming \r\n                    experience.\r\n                </body>\r\n            </div>\r\n            <div class=\"guide-section\">\r\n                <h2>Projects</h2>\r\n                <body>\r\n                    The projects section is a big place to show a recruiter just what you're capable of. \r\n                    Here, list 3-5 of the biggest projects you have worked on. They can be school-related \r\n                    or just something you did on your own time. If you have a personal github, add a link \r\n                    to it here. If you don't have a personal github, make one and start adding projects \r\n                    you've done in the past. For each project, briefly describe the following:\r\n                    <ul>\r\n                        <li><i>What was the main point of the project?</i> Focus on the most important point of the project and leave out minor details.</li>\r\n                        <li><i>What was your part in the project if you were in a group?</i> Talk about how you contributed to the team. If you had a leadership role, make sure to make that obvious in this description.</li>\r\n                        <li><i>What technical skills did you develop in this project?</i> i.e. data structures, algorithms, web-building, front-end/back-end, etc.</li>\r\n                    </ul>\r\n                </body>\r\n            </div>\r\n            <div class=\"guide-section\">\r\n                <h2>What Not To Put On Your Resume</h2>\r\n                <body>\r\n                    Remember, a recruiter could spend as little as 7 seconds or less looking at your resume.\r\n                    To optimize the time they spend, try to get rid of any of the following things on your resume:\r\n                    <ul>\r\n                        <li><i>Big graphics and distracting style.</i> Anything unimportant that draws the recruiter's eye is a serious waste of time.</li>\r\n                        <li><i>Long, wordy paragraphs.</i> Do your best in each description to be as brief as possible. The longer a paragraph is, the less likely a recruiter is to read it.</li>\r\n                        <li><i>Information irrelevant to the job you're applying to.</i> 9 times out of 10, the recruiter will not care about your lifeguarding job in high school or the cosplay club in college. Only talk about your technical experience, leadership experience, and other relevant soft skills.</li>\r\n                        <li><i>Spelling mistakes and grammatical errors.</i> Not proofreading your resume for spelling and grammatical errors comes across as very unprofessional.</li>\r\n                        <li><i>Inaccuracies about your education and experience.</i> Lying about what you do and don't know can only end poorly for you. Sooner or later, your employer will find out if you are not as qualified as you say you are.</li>\r\n                        <li><i>Solid walls of text.</i> Putting your resume in an organized list format will make it both more interesting to read and easier to scan.</li>\r\n                    </ul>\r\n                </body>\r\n            </div>\r\n            <div class=\"guide-section\">\r\n                <h2>Further Reference</h2>\r\n                <body>\r\n                    You can find more resources at the following pages:\r\n                    <ul>\r\n                        <li><a href=\"https://www.freecodecamp.org/news/writing-a-killer-software-engineering-resume-b11c91ef699d/\">How To Write A Killer Resume</a></li>\r\n                        <li><a href=\"https://www.hackreactor.com/blog/6-tips-for-a-software-engineer-resume-that-gets-you-hired\"> 6 Tips For A Resume That Will Get You Hired</a></li>\r\n                        <li><a href=\"https://novoresume.com/career-blog/software-engineer-resume\">Novoresume: Examples and Resume Builder</a></li>\r\n                        <li><a href=\"https://www.hackerrank.com/blog/tips-for-building-a-stellar-tech-resume/\">6 Tips For Building A Stellar Tech Resume</a></li>\r\n                    </ul>\r\n                </body>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Guide1","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\guide2.js",["277"],[],"import React from 'react'\r\nimport logo from \"./../images/Aggie_Fangs_Logo_Transparent.png\";\r\nimport styled from \"styled-components\";\r\nimport {Link } from \"react-router-dom\";\r\n\r\nconst LinkButton = styled.button `\r\n  cursor: pointer;\r\n  background-color: var(--btncolor);\r\n  width: 200px;\r\n  height: 90px;\r\n  padding: 5px 15px;\r\n  border-radius: 20px;\r\n  text-decoration: none;\r\n  color: var(--btntxtcolor);\r\n  font-size: 23px;\r\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\r\n\r\n  overflow-x: hidden;\r\n  float: left;\r\n  margin-right: 20px;\r\n`\r\n\r\nfunction Guide2 () {\r\n    return (\r\n        <div>\r\n            <div class=\"guide-header\">\r\n                <h1>Personality Interviews</h1>\r\n                <h2>Guides:</h2>\r\n                <Link to=\"/guide1\"><LinkButton>\r\n                    Resumes\r\n                </LinkButton></Link>\r\n                <Link to=\"/guide2\"><LinkButton>\r\n                    Personality Interviews\r\n                </LinkButton></Link>\r\n                <Link to=\"/guide3\"><LinkButton>\r\n                    Technical Interviews\r\n                </LinkButton></Link>\r\n            </div>\r\n            <div class=\"guide-section\">\r\n                <h2>Why Prepare For a Personality Interview?</h2>\r\n                <body>\r\n                    One of the most important things to many employers today is their work environment. A \r\n                    healthy work environment is both productive and fun to work in. And the first thing that \r\n                    an employer can do to work toward that goal is by vetting the personalities of their \r\n                    employees through a personality interview. Often, this only consists of one or two questions \r\n                    or just an observation of how you conduct yourself throughout the interview. But how you do in \r\n                    this can mean the difference between being hired or not.\r\n                </body>\r\n            </div>\r\n            <div class=\"guide-section\">\r\n                <h2>What Is My Interviewer Looking For?</h2>\r\n                <body>\r\n                    Many companies emphasize different things in their employees, so they may ask differing questions \r\n                    based on what they value. To get a good idea of what a company is looking for, try to find their \r\n                    values statement online. Here are some things that every company values in their employees to some \r\n                    extent:\r\n                    <ul>\r\n                        <li>A strong work ethic</li>\r\n                        <li>Teamwork and communication skills</li>\r\n                        <li>Ability to handle criticism</li>\r\n                        <li>Time management</li>\r\n                        <li>General problem solving skills</li>\r\n                    </ul>\r\n                </body>\r\n            </div>\r\n            <div class=\"guide-section\">\r\n                <h2>What Is My Interviewer Trying To Avoid?</h2>\r\n                <body>\r\n                    Interviewers look for bad personality traits just as much as they do good personality \r\n                    traits. Here are some of the red flags that they may be watching for:\r\n                    <ul>\r\n                        <li><i>Lack of professionalism.</i> Even in a job with little customer interaction, unprofessional people can be difficult to work with.</li>\r\n                        <li><i>Overly thought-out and prepared answers.</i> Canned answers can seem ingenuine and might tell a recruiter that the candidate is putting on a fake self.</li>\r\n                        <li><i>Excessive negativity about past jobs or experiences.</i> If you had a poor outlook on your past job, there is no way of knowing that you won't have the same attitude toward your next job.</li>\r\n                    </ul>\r\n                </body>\r\n            </div>\r\n            <div class=\"guide-section\">\r\n                <h2>How Do I Prepare For a Personality Interview?</h2>\r\n                <body>\r\n                    The best thing you can do to be prepared is to reflect on example personality interview questions \r\n                    and think about relevant past experiences that you can bring up. Here are some sample questions:\r\n                    <ul>\r\n                        <li>Describe yourself using three adjectives.</li>\r\n                        <li>What do you do to handle stress and pressure?</li>\r\n                        <li>What does an ideal vacation look like to you?</li>\r\n                        <li>What are you passionate about?</li>\r\n                        <li>Describe a time when you were coming up on a deadline and knew you couldn't finish your work on time? How did you approach your work? (Or what would you do in such a situation?)</li>\r\n                        <li>Describe a time when your boss was unsatisfied with your work. What did you do? (Or what would you do in such a situation?)</li>\r\n                        <li>What would you say is your greatest weakness? Are you doing anything to address it and get better?</li>\r\n                        <li>What do people most often criticize about you? Is it a legitimate concern?</li>\r\n                        <li>What project have you completed that you were the proudest of?</li>\r\n                        <li>If you knew that your boss was wrong about something important, how would you approach the situation?</li>\r\n                        <li>Describe a time when you had a major setback in a project. How did you handle it?  (Or what would you do in such a situation?)</li>\r\n                    </ul>\r\n                    Overall, remember that the most important thing is to be yourself. If you make up answers to questions, your employer will find out sooner \r\n                    or later. Being genuine and up-front about your flaws will be a sign of maturity to the employer.\r\n                </body>\r\n            </div>\r\n            <div class=\"guide-section\">\r\n                <h2>Further Reference</h2>\r\n                <body>\r\n                    <ul>\r\n                        <li><a href=\"https://www.edarabia.com/personality-interview-questions-every-hiring-manager-should-ask/\">14 Common Personality Interview Questions</a></li>\r\n                        <li><a href=\"https://www.indeed.com/career-advice/interviewing/personality-interview-questions\">7 Sample Personality Interview Questions and Answers</a></li>\r\n                        <li><a href=\"https://www.thebalancecareers.com/personal-interview-questions-and-sample-answers-2063477#:~:text=Learn%20as%20much%20as%20you,Answer%20honestly%2C%20and%20stay%20positive.\">How To Answer Peronal Interview Questions (With Examples)</a></li>\r\n                    </ul>\r\n                </body>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Guide2","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\guide3.js",["278"],[],"import React from 'react'\r\nimport logo from \"./../images/Aggie_Fangs_Logo_Transparent.png\";\r\nimport styled from \"styled-components\";\r\nimport {Link } from \"react-router-dom\";\r\n\r\nconst LinkButton = styled.button `\r\n  cursor: pointer;\r\n  background-color: var(--btncolor);\r\n  width: 200px;\r\n  height: 90px;\r\n  padding: 5px 15px;\r\n  border-radius: 20px;\r\n  text-decoration: none;\r\n  color: var(--btntxtcolor);\r\n  font-size: 23px;\r\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\r\n\r\n  overflow-x: hidden;\r\n  float: left;\r\n  margin-right: 20px;\r\n`\r\n\r\nfunction Guide3 () {\r\n    return (\r\n        <div>\r\n            <div class=\"guide-header\">\r\n                <h1>Technical Interviews</h1>\r\n                <h2>Guides:</h2>\r\n                <Link to=\"/guide1\"><LinkButton>\r\n                    Resumes\r\n                </LinkButton></Link>\r\n                <Link to=\"/guide2\"><LinkButton>\r\n                    Personality Interviews\r\n                </LinkButton></Link>\r\n                <Link to=\"/guide3\"><LinkButton>\r\n                    Technical Interviews\r\n                </LinkButton></Link>\r\n            </div>\r\n            <div class=\"guide-section\">\r\n                <h2>What Do Employers Look For In Technical Interviews?</h2>\r\n                <body>\r\n                    At the point of a technical interview, the interviewer already likely knows a good amount about your \r\n                    technical skills. Especially if you are in junior or senior year in college, they probably assume \r\n                    that you have a lot of technical knowledge. So, while they want to confirm that you know what you're \r\n                    talking about, they will also be looking at your problem solving skills and your coding practices.\r\n                </body>\r\n            </div>\r\n            <div class=\"guide-section\">\r\n                <h2>How Do I Know What They Will Ask Me In My Technical Interview?</h2>\r\n                <body>\r\n                    The short answer is that you don't. The same recruiter might even ask different questions of different \r\n                    candidates. But since each company looks for specific skills in their employees, they are likely to ask \r\n                    closely related questions. Looking at and practicing coding problems that the company has asked of \r\n                    candidates in the past will go a long way to prepare you for the technical interview with them.<br/>\r\n                    You can see our list of companies and reviews from students who interviewed at those companies <Link to=\"/interviewPrep\">here</Link>.<br/>\r\n                    You can see our list of example coding problems that have been asked in technical interviews <Link to=\"/coding\">here</Link>.<br/>\r\n                </body>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Guide3","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\feedbackform.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\VideoPlayer\\VideoComp.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\VideoPlayer\\Search.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\VideoPlayer\\VideoPlayer.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\VideoPlayer\\VideoList.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\VideoPlayer\\Video.js",[],[],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\settings.js",["279","280","281"],[],"import React from 'react';\r\nimport App from \"./../App\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ColorSchemeButton = styled.button `\r\n  cursor: pointer;\r\n  background-color: var(--btncolor);\r\n  padding: 1.5rem;\r\n  border-radius: 20px;\r\n  text-decoration: none;\r\n  color: var(--btntxtcolor);\r\n  font-size: 40px;\r\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\r\n  overflow-x: hidden;\r\n`\r\n\r\nconst Settings = () => {\r\n  function changeCSS () {\r\n      var thisStyle = localStorage.getItem(\"current-style\");\r\n      if (thisStyle == \"style1\") {\r\n          thisStyle = \"style2\";\r\n      } else {\r\n          thisStyle = \"style1\";\r\n      }\r\n      localStorage.setItem(\"current-style\", thisStyle);\r\n      window.location.reload(false);\r\n  }\r\n\r\n  var currentScheme = <text>Light Mode</text>;\r\n  var thisStyle = localStorage.getItem(\"current-style\");\r\n  if (thisStyle == \"style2\") {\r\n    currentScheme = <text>Dark Mode</text>;\r\n  }\r\n\r\n  return (\r\n    <div class=\"settings-page\">\r\n        <div class=\"company-section settings-menu\">\r\n            <h1>Settings</h1>\r\n            <body>\r\n                Color Scheme:<ColorSchemeButton onClick={changeCSS}>{currentScheme}</ColorSchemeButton>\r\n            </body>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\FormLC.js",["282","283","284"],[],"import React from 'react'\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SubmitButton = styled.button `\r\n  cursor: pointer;\r\n  background-color: var(--btncolor);\r\n  padding: 1.5rem;\r\n  border-radius: 20px;\r\n  text-decoration: none;\r\n  color: var(--btntxtcolor);\r\n  font-size: 40px;\r\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\r\n\r\n  overflow-x: hidden;\r\n  float: center;\r\n`\r\n\r\nvar dbAddress = localStorage.getItem(\"db-address\");\r\n\r\nconst FormLC = ({formLC, setFormLC}) => {\r\n    const handleChange = e => {\r\n        const{name, value} = e.target;\r\n        setFormLC({...formLC, [name]: value});\r\n    }\r\n    const checkValidity = () => {\r\n        // todo\r\n        return true;\r\n    }\r\n    const handleSubmit = e => {\r\n        console.log(\"formLC.urlType\", formLC.urlType)\r\n        if(formLC.urlType != undefined || formLC.urlType != \"None\" ){\r\n            var urlEndPoint = dbAddress + '/add' + formLC.urlType\r\n            console.log(\"Endpoint is: \", urlEndPoint)\r\n            fetch(urlEndPoint, {\r\n                mode:'no-cors',\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n                body: JSON.stringify({\r\n                    company: formLC.company,\r\n                    probTitle:formLC.name, \r\n                    url:formLC.link,\r\n                }) \r\n              });\r\n        } else{\r\n            alert(\"Need to enter Link Type!\")\r\n        }\r\n\r\n          \r\n        if (checkValidity()) {\r\n            alert(\"The input data is good!\");\r\n        } else {\r\n            alert(\"Please enter valid information.\")\r\n        }\r\n    }\r\n    return (\r\n        <form className='form' onSubmit={handleSubmit}>\r\n            <h2>Submit A LeetCode/HackerRank/Other Link</h2>\r\n\r\n            <label htmlFor='Company'>Company</label><br/>\r\n            <select placeholder=\"Company\"\r\n                id=\"company\"\r\n                name=\"company\"\r\n                value={formLC.company}\r\n                onChange={handleChange}>\r\n                <option value=\"None\">Select Company</option>\r\n                <option value=\"Google\">Google</option>\r\n                <option value=\"Facebook\">Facebook</option>\r\n                <option value=\"Amazon\">Amazon</option>\r\n                <option value=\"Netflix\">Netflix</option>\r\n                <option value=\"Apple\">Apple</option>\r\n                <option value=\"Microsoft\">Microsoft</option>\r\n            </select><br/>\r\n\r\n            <label htmlFor='urlType'>Link Type?</label><br/>\r\n            <select placeholder=\"Link Type\"\r\n                id=\"urlType\"\r\n                name=\"urlType\"\r\n                value={formLC.urlType}\r\n                onChange={handleChange}>\r\n                <option value=\"None\">Select Link Type</option>\r\n                <option value=\"LeetCode\">LeetCode</option>\r\n                <option value=\"HackerRank\">HackerRank</option>\r\n                <option value=\"OtherURL\">Other (article or general)</option>\r\n            </select><br/>\r\n            \r\n            <label htmlFor='Name'>Name</label>\r\n            <textarea\r\n                value={formLC.name}\r\n                placeholder=\"Enter problem name\"  \r\n                id=\"name\" \r\n                name=\"name\" \r\n                autoComplete=\"off\"\r\n                onChange={handleChange}>\r\n            </textarea><br/>\r\n\r\n            <label htmlFor='Link'>Link</label>\r\n            <textarea\r\n                value={formLC.link}\r\n                placeholder=\"Enter LeetCode/HackerRank/Other Link\"  \r\n                id=\"link\" \r\n                name=\"link\" \r\n                autoComplete=\"off\"\r\n                onChange={handleChange}>\r\n            </textarea><br/><br/>\r\n\r\n            <SubmitButton>\r\n                Submit\r\n            </SubmitButton>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormLC","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\FormCoding.js",["285"],[],"import React from 'react'\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SubmitButton = styled.button `\r\n  cursor: pointer;\r\n  background-color: var(--btncolor);\r\n  padding: 1.5rem;\r\n  border-radius: 20px;\r\n  text-decoration: none;\r\n  color: var(--btntxtcolor);\r\n  font-size: 40px;\r\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\r\n\r\n  overflow-x: hidden;\r\n  float: center;\r\n`\r\n\r\nvar dbAddress = localStorage.getItem(\"db-address\");\r\n\r\nconst FormCoding = ({formCd, setFormCd}) => {\r\n\r\n\r\n    const handleChange = e => {\r\n        const{name, value} = e.target;\r\n        setFormCd({...formCd, [name]: value});\r\n    }\r\n    const checkValidity = () => {\r\n        // todo\r\n        return true;\r\n    }\r\n    const handleSubmit = e => {\r\n        if (checkValidity()) {\r\n            fetch(dbAddress + '/addCodeProb', {\r\n                mode:'no-cors',\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n                body: JSON.stringify({\r\n                    company: formCd.company,\r\n                    probTitle:formCd.name,\r\n                    concepts: formCd.concepts,\r\n                    probPrompt:formCd.prompt,\r\n                }) \r\n              });\r\n        } else {\r\n            alert(\"Please enter valid information.\")\r\n        }\r\n    }\r\n    return (\r\n        <form className='form' onSubmit={handleSubmit}>\r\n            <h2>Submit A Coding Problem</h2>\r\n            <label htmlFor='Company'>Which Company Asked This Question?</label><br/>\r\n            <select placeholder=\"Company Name\"\r\n                id=\"company\"\r\n                name=\"company\"\r\n                value={formCd.company}\r\n                onChange={handleChange}>\r\n                <option value=\"None\">Select Company</option>\r\n                <option value=\"Google\">Google</option>\r\n                <option value=\"Facebook\">Facebook</option>\r\n                <option value=\"Amazon\">Amazon</option>\r\n                <option value=\"Netflix\">Netflix</option>\r\n                <option value=\"Apple\">Apple</option>\r\n                <option value=\"Microsoft\">Microsoft</option>\r\n                <option value=\"N/A\">N/A</option>\r\n            </select><br/>\r\n\r\n            <label htmlFor='Name'>Problem Name</label>\r\n            <textarea\r\n                 value={formCd.name}\r\n                 placeholder=\"Enter problem title\"  \r\n                 id=\"name\" \r\n                 name=\"name\" \r\n                 autoComplete=\"off\"\r\n                 onChange={handleChange}>\r\n            </textarea><br/>\r\n\r\n            <label htmlFor='Concepts'>Concepts Covered</label>\r\n            <textarea\r\n                value={formCd.concepts}\r\n                placeholder=\"What concepts does this problem cover?\"  \r\n                id=\"concepts\" \r\n                name=\"concepts\" \r\n                autoComplete=\"off\"\r\n                onChange={handleChange}>\r\n            </textarea><br/>\r\n          \r\n            <label htmlFor='prompt'>Problem Prompt</label><br/>\r\n            <div class=\"review-box\"><textarea\r\n                    value={formCd.prompt}\r\n                    placeholder=\"Enter problem prompt\"  \r\n                    id=\"prompt\" \r\n                    name=\"prompt\" \r\n                    autoComplete=\"off\"\r\n                    onChange={handleChange}>\r\n            </textarea></div><br/>\r\n\r\n            <SubmitButton >\r\n                Submit\r\n            </SubmitButton>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormCoding","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\FeedbackView.js",["286","287","288","289","290","291","292","293"],[],"import React, { useEffect, useState } from \"react\";\r\nimport loadingGif from \"../images/loading.gif\";\r\nimport upimg1 from \"../images/up1.png\";\r\nimport upimg2 from \"../images/up2.png\";\r\nimport downimg1 from \"../images/down1.png\";\r\nimport downimg2 from \"../images/down2.png\";\r\n\r\nvar dbAddress = localStorage.getItem(\"db-address\");\r\n//reviewAddress = \"http://localhost:3002/getReviews\";\r\n\r\nfunction FeedbackView({company}){\r\n    const [reviewInfo, setReviewInfo] = useState(null);\r\n    useEffect(() => {\r\n        fetch(dbAddress + \"/getReviews\",{\r\n        method: \"GET\"\r\n      }).then(response => {\r\n       if (response.type === 'opaque' || response.ok) {\r\n           response.json().then(revItems => {\r\n           setReviewInfo(revItems)\r\n         });\r\n       } \r\n     }).catch(error => {\r\n       console.log(\"Error is: \", error)\r\n     });\r\n    },[]);\r\n\r\n    function upVote(id) {\r\n       // console.log(\"upvote id: \", id)\r\n            fetch(dbAddress + '/upVote/' + id,{\r\n            method: \"GET\"\r\n        }).then(response => {\r\n            if (response.type === 'opaque' || response.ok) {\r\n                window.location.href = window.location.href;\r\n            } \r\n        }).catch(error => {\r\n        console.log(\"Error is: \", error)\r\n        });\r\n        \r\n    }\r\n\r\n    function downVote(id) {\r\n        // do something with the id of the review\r\n        //console.log(\"*downvote id: \", id)\r\n        fetch(dbAddress + '/downVote/' + id,{\r\n        method: \"GET\" \r\n        }).then(response => {\r\n            if (response.type === 'opaque' || response.ok) {\r\n                window.location.href = window.location.href;\r\n            } \r\n        }).catch(error => {\r\n            console.log(\"Error is: \", error)\r\n        });\r\n       \r\n    }\r\n\r\n\r\n    if(reviewInfo == null ){\r\n        return(\r\n            <div>\r\n                <img src={loadingGif} alt=\"wait until the page loads\"/>\r\n            </div>\r\n        )\r\n    } else {\r\n        var reviewList = new Array();\r\n        var upImage = <img src={upimg2} alt=\"upvote\" align=\"left\"/>\r\n        // if statement to change which up image to use based on whether the user has voted\r\n        var downImage = <img src={downimg2} alt=\"upvote\" align=\"right\"/>\r\n        // if statement to change which down image to use\r\n        var thisCompany = localStorage.getItem(\"this-company\");\r\n        /*the down vote and up votes dont display properly on some company pages */\r\n        reviewInfo.map( singleReviewItem => {\r\n            reviewList.push(\r\n                (!thisCompany.localeCompare(singleReviewItem.title)) ? \r\n                (<div className=\"reviewBox\">\r\n                    <h3>Name: {singleReviewItem.name} / {singleReviewItem.title}</h3>\r\n                    <h3>Tags: </h3>\r\n                    <body>\r\n                        {singleReviewItem.description}\r\n                    </body>\r\n                    <div class=\"votes up\">\r\n                        <a onClick={() => { upVote(singleReviewItem.id)}}>{upImage}</a>{singleReviewItem.upVotes}\r\n                    </div>\r\n                    <div class=\"votes down\">\r\n                        <a onClick={() => {downVote(singleReviewItem.id)}}>{downImage}</a>{singleReviewItem.downVotes}\r\n                    </div>\r\n                </div>)\r\n                : null\r\n            )\r\n        });\r\n        \r\n        return(\r\n            <div>\r\n                {reviewList}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default FeedbackView;",["294","295"],"C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\LeetCodeURL.js",["296","297"],[],"import React, { useEffect, useState } from \"react\";\r\nimport loadingGif from \"../images/loading.gif\";\r\n\r\nvar dbAddress = localStorage.getItem(\"db-address\");\r\n\r\nfunction LeetCodeURL(){\r\n    const [urls, setUrls] = useState(null);\r\n    const databaseID = '3cb9e25839cd4ab2abe7d189b46575d2';\r\n    useEffect(() => {\r\n        fetch(dbAddress + '/getURLS/' + databaseID,{\r\n        method: \"GET\"\r\n      }).then(response => {\r\n       if (response.type === 'opaque' || response.ok) {\r\n           response.json().then(URLs => {\r\n            setUrls(URLs)\r\n         });\r\n       } \r\n     }).catch(error => {\r\n       console.log(\"Error is: \", error)\r\n     });\r\n    },[]);\r\n\r\n\r\n\r\n    if(urls == null ){\r\n        return(\r\n            <div>\r\n                <img src={loadingGif} alt=\"wait until the page loads\"/>\r\n            </div>\r\n        )\r\n    } else {\r\n        var urlArr = new Array();\r\n        var thisCompany = localStorage.getItem(\"this-company\");\r\n        /*the down vote and up votes dont display properly on some company pages */\r\n        urls.map( urlObj=> {\r\n            urlArr.push(\r\n                (!thisCompany.localeCompare(urlObj.title)) ? \r\n                (\r\n                    <li><a href={urlObj.url}>{urlObj.name}</a></li>\r\n                )\r\n                : null\r\n            )\r\n        });\r\n        \r\n        return(\r\n            <div>\r\n                {urlArr}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LeetCodeURL;","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\OtherURL.js",["298","299"],[],"import React, { useEffect, useState } from \"react\";\r\nimport loadingGif from \"../images/loading.gif\";\r\n\r\nvar dbAddress = localStorage.getItem(\"db-address\");\r\n\r\nfunction OtherURL(){\r\n    const [urls, setUrls] = useState(null);\r\n    const databaseID = '056f97d0a08240eaa197b4bcc97f2263'\r\n    useEffect(() => {\r\n        fetch(dbAddress + '/getURLS/' + databaseID,{\r\n        method: \"GET\"\r\n      }).then(response => {\r\n       if (response.type === 'opaque' || response.ok) {\r\n           response.json().then(URLs => {\r\n            setUrls(URLs)\r\n         });\r\n       } \r\n     }).catch(error => {\r\n       console.log(\"Error is: \", error)\r\n     });\r\n    },[]);\r\n\r\n\r\n\r\n    if(urls == null ){\r\n        return(\r\n            <div>\r\n                <img src={loadingGif} alt=\"wait until the page loads\"/>\r\n            </div>\r\n        )\r\n    } else {\r\n        var urlArr = new Array();\r\n        var thisCompany = localStorage.getItem(\"this-company\");\r\n        /*the down vote and up votes dont display properly on some company pages */\r\n        urls.map( urlObj=> {\r\n            urlArr.push(\r\n                (!thisCompany.localeCompare(urlObj.title)) ? \r\n                (\r\n                    <li><a href={urlObj.url}>{urlObj.name}</a></li>\r\n                )\r\n                : null\r\n            )\r\n        });\r\n        \r\n        return(\r\n            <div>\r\n                {urlArr}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default OtherURL;","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\components\\HackerRankURL.js",["300","301"],[],"import React, { useEffect, useState } from \"react\";\r\nimport loadingGif from \"../images/loading.gif\";\r\n\r\nvar dbAddress = localStorage.getItem(\"db-address\");\r\n\r\nfunction HackerRankURL(){\r\n    const [urls, setUrls] = useState(null);\r\n    const databaseID = '0698bdf32713495586b8a33be98bf48e'\r\n    useEffect(() => {\r\n        fetch(dbAddress + '/getURLS/'+databaseID,{\r\n        method: \"GET\"\r\n      }).then(response => {\r\n       if (response.type === 'opaque' || response.ok) {\r\n           response.json().then(URLs => {\r\n            setUrls(URLs)\r\n         });\r\n       } \r\n     }).catch(error => {\r\n       console.log(\"Error is: \", error)\r\n     });\r\n    },[]);\r\n\r\n\r\n\r\n    if(urls == null ){\r\n        return(\r\n            <div>\r\n                <img src={loadingGif} alt=\"wait until the page loads\"/>\r\n            </div>\r\n        )\r\n    } else {\r\n        var urlArr = new Array();\r\n        var thisCompany = localStorage.getItem(\"this-company\");\r\n        /*the down vote and up votes dont display properly on some company pages */\r\n        urls.map( urlObj=> {\r\n            urlArr.push(\r\n                (!thisCompany.localeCompare(urlObj.title)) ? \r\n                (\r\n                    <li><a href={urlObj.url}>{urlObj.name}</a></li>\r\n                )\r\n                : null\r\n            )\r\n        });\r\n        \r\n        return(\r\n            <div>\r\n                {urlArr}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default HackerRankURL;","C:\\Programming\\github\\Proj3\\aggie-fangs\\src\\pages\\codingProb.js",["302","303","304","305"],[],"import React, { useEffect, useState } from 'react'\r\nimport styled from \"styled-components\";\r\nimport loadingGif from \"../images/loading.gif\";\r\n\r\nconst ProbButton = styled.button `\r\n  cursor: pointer;\r\n  background-color: rgb(75, 0, 130);\r\n  width: 100%;\r\n  padding: 15px 15px;\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\r\n  align-self: left;\r\n  left: 0;\r\n  margin-top: 10px;\r\n  margin-bottom: 0;\r\n`\r\n\r\nvar dbAddress = localStorage.getItem(\"db-address\");\r\n\r\nfunction CodingProblemList () {\r\n  const [codeProbArr, setcodeProbArr] = useState(null);\r\n  useEffect(() => {\r\n    fetch(dbAddress + '/getCodeProb',{\r\n    method: \"GET\"\r\n  }).then(response => {\r\n    if (response.type === 'opaque' || response.ok) {\r\n        response.json().then(codeProbsObjs => {\r\n          setcodeProbArr(codeProbsObjs)\r\n      });\r\n    } \r\n  }).catch(error => {\r\n    console.log(\"Error is: \", error)\r\n  });\r\n  },[]);\r\n\r\n  function changeCurrentProblem (objID) {\r\n\r\n    /* -------------- Get problem info by id here -------------- */\r\n\r\n    var probTitle = \"None Selected\";\r\n    var probConcepts = \"N/A\";\r\n    var probPrompt = \"N/A\";\r\n    var probCompany = \"N/A\";\r\n    var codeProb = null;\r\n    if (codeProbArr != null) {\r\n      codeProbArr.map(codeObj => {\r\n        codeProb = (codeObj.id === objID) ?\r\n          codeObj :\r\n          codeProb\r\n      })\r\n    }\r\n    if (codeProb) {\r\n      probTitle = codeProb.title;\r\n      probConcepts = codeProb.concepts;\r\n      probPrompt = codeProb.prompt;\r\n      probCompany = codeProb.company;\r\n    }\r\n\r\n\r\n    localStorage.setItem(\"problem-title\", probTitle);\r\n    localStorage.setItem(\"problem-concepts\", probConcepts);\r\n    localStorage.setItem(\"problem-prompt\", probPrompt);\r\n    localStorage.setItem(\"problem-company\", probCompany);\r\n    window.location.reload();\r\n  }\r\n\r\n  var problemList = new Array();\r\n  var thisCompany = localStorage.getItem(\"this-company\");\r\n  // id, title, prompt, concepts, company\r\n  if(codeProbArr != null){\r\n    codeProbArr.map(codeObj => {\r\n      problemList.push((!thisCompany.localeCompare(codeObj.company) || thisCompany == \"None\") ?\r\n      (<div>\r\n        <ProbButton onClick={() => {changeCurrentProblem(codeObj.id)}}>{codeObj.title} ({codeObj.company})</ProbButton>\r\n      </div>)\r\n      : null)\r\n    })\r\n  } else {\r\n    problemList.push(<img src={loadingGif} alt=\"wait until the page loads\"/>)\r\n  }\r\n  \r\n  // check if problemList is full of null values\r\n  var isEmpty = true;\r\n  for (let i = 0; i < problemList.length; i++) {\r\n    if (problemList[i] != null) {\r\n      isEmpty = false;\r\n      break;\r\n    }\r\n  }\r\n  if (isEmpty) {\r\n    problemList.push(<body>There are currently no problems related to this company.</body>)\r\n  }\r\n  return (\r\n    <div className='show-problems'>\r\n      <h1>Problems:</h1>\r\n      {problemList}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CodingProblemList",{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","severity":1,"message":"311","line":3,"column":10,"nodeType":"312","messageId":"313","endLine":3,"endColumn":23},{"ruleId":"310","severity":1,"message":"314","line":60,"column":7,"nodeType":"312","messageId":"313","endLine":60,"endColumn":26},{"ruleId":"310","severity":1,"message":"315","line":86,"column":7,"nodeType":"312","messageId":"313","endLine":86,"endColumn":22},{"ruleId":"310","severity":1,"message":"316","line":88,"column":7,"nodeType":"312","messageId":"313","endLine":88,"endColumn":23},{"ruleId":"317","severity":1,"message":"318","line":99,"column":20,"nodeType":"319","messageId":"320","endLine":99,"endColumn":22},{"ruleId":"310","severity":1,"message":"321","line":3,"column":8,"nodeType":"312","messageId":"313","endLine":3,"endColumn":12},{"ruleId":"310","severity":1,"message":"322","line":2,"column":38,"nodeType":"312","messageId":"313","endLine":2,"endColumn":44},{"ruleId":"310","severity":1,"message":"323","line":2,"column":46,"nodeType":"312","messageId":"313","endLine":2,"endColumn":56},{"ruleId":"310","severity":1,"message":"324","line":1,"column":28,"nodeType":"312","messageId":"313","endLine":1,"endColumn":36},{"ruleId":"310","severity":1,"message":"325","line":7,"column":8,"nodeType":"312","messageId":"313","endLine":7,"endColumn":13},{"ruleId":"310","severity":1,"message":"326","line":8,"column":10,"nodeType":"312","messageId":"313","endLine":8,"endColumn":18},{"ruleId":"306","replacedBy":"327"},{"ruleId":"308","replacedBy":"328"},{"ruleId":"310","severity":1,"message":"329","line":2,"column":8,"nodeType":"312","messageId":"313","endLine":2,"endColumn":18},{"ruleId":"310","severity":1,"message":"330","line":8,"column":16,"nodeType":"312","messageId":"313","endLine":8,"endColumn":22},{"ruleId":"310","severity":1,"message":"331","line":13,"column":10,"nodeType":"312","messageId":"313","endLine":13,"endColumn":17},{"ruleId":"310","severity":1,"message":"332","line":13,"column":19,"nodeType":"312","messageId":"313","endLine":13,"endColumn":29},{"ruleId":"310","severity":1,"message":"329","line":2,"column":8,"nodeType":"312","messageId":"313","endLine":2,"endColumn":18},{"ruleId":"310","severity":1,"message":"330","line":3,"column":16,"nodeType":"312","messageId":"313","endLine":3,"endColumn":22},{"ruleId":"310","severity":1,"message":"331","line":13,"column":12,"nodeType":"312","messageId":"313","endLine":13,"endColumn":19},{"ruleId":"310","severity":1,"message":"332","line":13,"column":21,"nodeType":"312","messageId":"313","endLine":13,"endColumn":31},{"ruleId":"310","severity":1,"message":"329","line":2,"column":8,"nodeType":"312","messageId":"313","endLine":2,"endColumn":18},{"ruleId":"310","severity":1,"message":"330","line":3,"column":16,"nodeType":"312","messageId":"313","endLine":3,"endColumn":22},{"ruleId":"310","severity":1,"message":"331","line":13,"column":12,"nodeType":"312","messageId":"313","endLine":13,"endColumn":19},{"ruleId":"310","severity":1,"message":"332","line":13,"column":21,"nodeType":"312","messageId":"313","endLine":13,"endColumn":31},{"ruleId":"310","severity":1,"message":"329","line":2,"column":8,"nodeType":"312","messageId":"313","endLine":2,"endColumn":18},{"ruleId":"310","severity":1,"message":"330","line":3,"column":16,"nodeType":"312","messageId":"313","endLine":3,"endColumn":22},{"ruleId":"310","severity":1,"message":"331","line":13,"column":12,"nodeType":"312","messageId":"313","endLine":13,"endColumn":19},{"ruleId":"310","severity":1,"message":"332","line":13,"column":21,"nodeType":"312","messageId":"313","endLine":13,"endColumn":31},{"ruleId":"310","severity":1,"message":"329","line":2,"column":8,"nodeType":"312","messageId":"313","endLine":2,"endColumn":18},{"ruleId":"310","severity":1,"message":"330","line":3,"column":16,"nodeType":"312","messageId":"313","endLine":3,"endColumn":22},{"ruleId":"310","severity":1,"message":"331","line":13,"column":12,"nodeType":"312","messageId":"313","endLine":13,"endColumn":19},{"ruleId":"310","severity":1,"message":"332","line":13,"column":21,"nodeType":"312","messageId":"313","endLine":13,"endColumn":31},{"ruleId":"310","severity":1,"message":"329","line":2,"column":8,"nodeType":"312","messageId":"313","endLine":2,"endColumn":18},{"ruleId":"310","severity":1,"message":"333","line":3,"column":9,"nodeType":"312","messageId":"313","endLine":3,"endColumn":13},{"ruleId":"310","severity":1,"message":"334","line":11,"column":7,"nodeType":"312","messageId":"313","endLine":11,"endColumn":17},{"ruleId":"310","severity":1,"message":"331","line":30,"column":12,"nodeType":"312","messageId":"313","endLine":30,"endColumn":19},{"ruleId":"310","severity":1,"message":"332","line":30,"column":21,"nodeType":"312","messageId":"313","endLine":30,"endColumn":31},{"ruleId":"310","severity":1,"message":"335","line":4,"column":7,"nodeType":"312","messageId":"313","endLine":4,"endColumn":13},{"ruleId":"336","severity":1,"message":"337","line":17,"column":1,"nodeType":"338","endLine":33,"endColumn":5},{"ruleId":"310","severity":1,"message":"339","line":18,"column":12,"nodeType":"312","messageId":"313","endLine":18,"endColumn":17},{"ruleId":"310","severity":1,"message":"340","line":18,"column":19,"nodeType":"312","messageId":"313","endLine":18,"endColumn":27},{"ruleId":"341","severity":1,"message":"342","line":20,"column":16,"nodeType":"343","endLine":28,"endColumn":6},{"ruleId":"341","severity":1,"message":"344","line":28,"column":8,"nodeType":"345","endLine":28,"endColumn":10,"suggestions":"346"},{"ruleId":"310","severity":1,"message":"330","line":2,"column":16,"nodeType":"312","messageId":"313","endLine":2,"endColumn":22},{"ruleId":"310","severity":1,"message":"347","line":4,"column":8,"nodeType":"312","messageId":"313","endLine":4,"endColumn":13},{"ruleId":"310","severity":1,"message":"348","line":5,"column":8,"nodeType":"312","messageId":"313","endLine":5,"endColumn":19},{"ruleId":"310","severity":1,"message":"349","line":8,"column":7,"nodeType":"312","messageId":"313","endLine":8,"endColumn":18},{"ruleId":"310","severity":1,"message":"350","line":44,"column":9,"nodeType":"312","messageId":"313","endLine":44,"endColumn":25},{"ruleId":"310","severity":1,"message":"351","line":55,"column":9,"nodeType":"312","messageId":"313","endLine":55,"endColumn":29},{"ruleId":"310","severity":1,"message":"352","line":60,"column":9,"nodeType":"312","messageId":"313","endLine":60,"endColumn":22},{"ruleId":"310","severity":1,"message":"353","line":2,"column":8,"nodeType":"312","messageId":"313","endLine":2,"endColumn":12},{"ruleId":"310","severity":1,"message":"353","line":2,"column":8,"nodeType":"312","messageId":"313","endLine":2,"endColumn":12},{"ruleId":"310","severity":1,"message":"353","line":2,"column":8,"nodeType":"312","messageId":"313","endLine":2,"endColumn":12},{"ruleId":"310","severity":1,"message":"354","line":2,"column":8,"nodeType":"312","messageId":"313","endLine":2,"endColumn":11},{"ruleId":"317","severity":1,"message":"318","line":20,"column":21,"nodeType":"319","messageId":"320","endLine":20,"endColumn":23},{"ruleId":"317","severity":1,"message":"318","line":31,"column":17,"nodeType":"319","messageId":"320","endLine":31,"endColumn":19},{"ruleId":"310","severity":1,"message":"330","line":2,"column":16,"nodeType":"312","messageId":"313","endLine":2,"endColumn":22},{"ruleId":"317","severity":1,"message":"355","line":32,"column":27,"nodeType":"319","messageId":"320","endLine":32,"endColumn":29},{"ruleId":"317","severity":1,"message":"355","line":32,"column":58,"nodeType":"319","messageId":"320","endLine":32,"endColumn":60},{"ruleId":"310","severity":1,"message":"330","line":2,"column":16,"nodeType":"312","messageId":"313","endLine":2,"endColumn":22},{"ruleId":"310","severity":1,"message":"356","line":3,"column":8,"nodeType":"312","messageId":"313","endLine":3,"endColumn":14},{"ruleId":"310","severity":1,"message":"357","line":5,"column":8,"nodeType":"312","messageId":"313","endLine":5,"endColumn":16},{"ruleId":"358","severity":1,"message":"359","line":33,"column":40,"nodeType":"360","messageId":"361","endLine":33,"endColumn":60},{"ruleId":"358","severity":1,"message":"359","line":48,"column":40,"nodeType":"360","messageId":"361","endLine":48,"endColumn":60},{"ruleId":"362","severity":1,"message":"363","line":64,"column":26,"nodeType":"364","messageId":"365","endLine":64,"endColumn":37},{"ruleId":"366","severity":1,"message":"367","line":71,"column":42,"nodeType":"343","messageId":"368","endLine":71,"endColumn":44},{"ruleId":"369","severity":1,"message":"370","line":81,"column":25,"nodeType":"371","endLine":81,"endColumn":75},{"ruleId":"369","severity":1,"message":"370","line":84,"column":25,"nodeType":"371","endLine":84,"endColumn":76},{"ruleId":"306","replacedBy":"372"},{"ruleId":"308","replacedBy":"373"},{"ruleId":"362","severity":1,"message":"363","line":32,"column":22,"nodeType":"364","messageId":"365","endLine":32,"endColumn":33},{"ruleId":"366","severity":1,"message":"367","line":35,"column":25,"nodeType":"343","messageId":"368","endLine":35,"endColumn":27},{"ruleId":"362","severity":1,"message":"363","line":32,"column":22,"nodeType":"364","messageId":"365","endLine":32,"endColumn":33},{"ruleId":"366","severity":1,"message":"367","line":35,"column":25,"nodeType":"343","messageId":"368","endLine":35,"endColumn":27},{"ruleId":"362","severity":1,"message":"363","line":32,"column":22,"nodeType":"364","messageId":"365","endLine":32,"endColumn":33},{"ruleId":"366","severity":1,"message":"367","line":35,"column":25,"nodeType":"343","messageId":"368","endLine":35,"endColumn":27},{"ruleId":"366","severity":1,"message":"367","line":48,"column":31,"nodeType":"343","messageId":"368","endLine":48,"endColumn":33},{"ruleId":"362","severity":1,"message":"363","line":69,"column":21,"nodeType":"364","messageId":"365","endLine":69,"endColumn":32},{"ruleId":"366","severity":1,"message":"367","line":73,"column":29,"nodeType":"343","messageId":"368","endLine":73,"endColumn":31},{"ruleId":"317","severity":1,"message":"318","line":74,"column":84,"nodeType":"319","messageId":"320","endLine":74,"endColumn":86},"no-native-reassign",["374"],"no-negated-in-lhs",["375"],"no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'GlobalStyleOriginal' is assigned a value but never used.","'publicDBAddress' is assigned a value but never used.","'localCompAddress' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Form' is defined but never used.","'NavBtn' is defined but never used.","'NavBtnLink' is defined but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","'FaThList' is defined but never used.",["374"],["375"],"'ReviewList' is defined but never used.","'uuidv4' is defined but never used.","'reviews' is assigned a value but never used.","'setReviews' is assigned a value but never used.","'Link' is defined but never used.","'LinkButton' is assigned a value but never used.","'notion' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'notion.databases'. Either include it or remove the dependency array.","ArrayExpression",["376"],"'axios' is defined but never used.","'Multiselect' is defined but never used.","'database_id' is assigned a value but never used.","'handleRemovedTag' is assigned a value but never used.","'handleSelectedChange' is assigned a value but never used.","'checkValidity' is assigned a value but never used.","'logo' is defined but never used.","'App' is defined but never used.","Expected '!==' and instead saw '!='.","'upimg1' is defined but never used.","'downimg1' is defined but never used.","no-self-assign","'window.location.href' is assigned to itself.","MemberExpression","selfAssignment","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["374"],["375"],"no-global-assign","no-unsafe-negation",{"desc":"377","fix":"378"},"Update the dependencies array to be: [notion.databases]",{"range":"379","text":"380"},[900,902],"[notion.databases]"]